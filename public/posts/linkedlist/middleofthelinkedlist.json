{
  "id": "linkedlist/middleofthelinkedlist",
  "contentHtml": "<h1>Middle of the Linked List</h1>\n<p>You are given the <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>h</mi><mi>e</mi><mi>a</mi><mi>d</mi></mrow><annotation>head</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">d</span></span></span></span> of a linked list and must return its middle node.</p>\n<ul>\n<li>If the linked list is even, return the <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>2</mn><mi>n</mi><mi>d</mi></mrow><annotation>2nd</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">d</span></span></span></span> of the two even nodes.</li>\n</ul>\n<p><img src=\"/middleOfTheLinkedList/MiddleOfTheLinkedList1.png\" alt=\"Image\"></p>\n<h2>How to Solve?</h2>\n<p>We should first start off at the <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>h</mi><mi>e</mi><mi>a</mi><mi>d</mi></mrow><annotation>head</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">d</span></span></span></span> of the list. Recognize the fact that the <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>m</mi><mi>i</mi><mi>d</mi><mi>d</mi><mi>l</mi><mi>e</mi></mrow><annotation>middle</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">mi</span><span class=\"mord mathnormal\">dd</span><span class=\"mord mathnormal\">l</span><span class=\"mord mathnormal\">e</span></span></span></span> of the linked list is half of the list.</p>\n<p>This intuition suggests that we should have two pointers. Because if we have one pointer that reaches the end of the list, where should the other one be?</p>\n<h3>Linked List</h3>\n<p>Let's say I have a mile time of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>10</mn></mrow><annotation>10</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">10</span></span></span></span> minutes and my friend has a mile time of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>5</mn></mrow><annotation>5</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">5</span></span></span></span> minutes.</p>\n<p>Obviously, my friend goes <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>t</mi><mi>w</mi><mi>i</mi><mi>c</mi><mi>e</mi></mrow><annotation>twice</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">tw</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">ce</span></span></span></span> as fast as me. But I am still halfway in the track whereas my friend finished.</p>\n<ul>\n<li>Assuming we are constantly going the same pace.</li>\n</ul>\n<p>Wouldn't this same intuition help us solve the problem? If we had a slow pointer and a fast pointer, the slow pointer will surely be far behind the fast pointer.</p>\n<p>Let's set <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>s</mi></mrow><annotation>s</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">s</span></span></span></span> as our slow pointer and <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>f</mi></mrow><annotation>f</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">f</span></span></span></span> as our fast pointer. They initially point to the <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>h</mi><mi>e</mi><mi>a</mi><mi>d</mi></mrow><annotation>head</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">d</span></span></span></span>, but <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>f</mi></mrow><annotation>f</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">f</span></span></span></span> is twice the pace as <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>s</mi></mrow><annotation>s</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">s</span></span></span></span> in our case.</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>s</mi><mo>=</mo><mi>h</mi><mi>e</mi><mi>a</mi><mi>d</mi></mrow><annotation>s = head</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">s</span><span class=\"mspace\"></span><span class=\"mrel\">=</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">d</span></span></span></span>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>s</mi><mo>=</mo><mi>s</mi><mi>.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi></mrow><annotation>s = s.next</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">s</span><span class=\"mspace\"></span><span class=\"mrel\">=</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">t</span></span></span></span>\n<ul>\n<li>Slow goes at a pace of 1.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>f</mi><mo>=</mo><mi>h</mi><mi>e</mi><mi>a</mi><mi>d</mi></mrow><annotation>f = head</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">f</span><span class=\"mspace\"></span><span class=\"mrel\">=</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">d</span></span></span></span>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>f</mi><mo>=</mo><mi>f</mi><mi>.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi></mrow><annotation>f = f.next.next</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">f</span><span class=\"mspace\"></span><span class=\"mrel\">=</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">f</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">t</span></span></span></span>\n<ul>\n<li>Fast goes at a pace of 2.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Try using this intuition on a linked list yourself. If not, I will provide a visual diagram of the algorithm below.</p>\n<p><img src=\"/middleOfTheLinkedList/MiddleOfTheLinkedList2.png\" alt=\"Image\"></p>\n<p>Notice how <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>f</mi><mi>a</mi><mi>s</mi><mi>t</mi></mrow><annotation>fast</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">f</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span></span></span></span> is not pointing to null by in example 2 on the first iteration. That is how <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>s</mi><mi>l</mi><mi>o</mi><mi>w</mi></mrow><annotation>slow</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">w</span></span></span></span> ends up being at <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>3</mn></mrow><annotation>3</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">3</span></span></span></span> in this case.</p>\n<h3>Helpful Hints</h3>\n<ul>\n<li>Make sure to end the <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>w</mi><mi>h</mi><mi>i</mi><mi>l</mi><mi>e</mi></mrow><annotation>while</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">w</span><span class=\"mord mathnormal\">hi</span><span class=\"mord mathnormal\">l</span><span class=\"mord mathnormal\">e</span></span></span></span> loop when <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>f</mi><mi>a</mi><mi>s</mi><mi>t</mi></mrow><annotation>fast</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">f</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span></span></span></span> or <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>f</mi><mi>a</mi><mi>s</mi><mi>t</mi><mi>.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi></mrow><annotation>fast.next</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">f</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">t</span></span></span></span> is equal to <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>n</mi><mi>u</mi><mi>l</mi><mi>l</mi></mrow><annotation>null</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">ll</span></span></span></span> as this is when <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>s</mi><mi>l</mi><mi>o</mi><mi>w</mi></mrow><annotation>slow</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">w</span></span></span></span> is in the middle.</li>\n</ul>\n<h3>Linked List Solution</h3>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-comment\"># Definition for singly-linked list.</span>\r\n<span class=\"hljs-comment\"># class ListNode:</span>\r\n<span class=\"hljs-comment\">#     def __init__(self, val=0, next=None):</span>\r\n<span class=\"hljs-comment\">#         self.val = val</span>\r\n<span class=\"hljs-comment\">#         self.next = next</span>\r\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Solution</span>:\r\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">middleNode</span>(<span class=\"hljs-params\">self, head: <span class=\"hljs-type\">Optional</span>[ListNode]</span>) -> <span class=\"hljs-type\">Optional</span>[ListNode]:\r\n        <span class=\"hljs-comment\"># Set slow and fast to head</span>\r\n        s, f = head, head\r\n\r\n        <span class=\"hljs-comment\"># When fast is equal to null, then we found the middle</span>\r\n        <span class=\"hljs-comment\"># Fast goes twice as fast as slow</span>\r\n        <span class=\"hljs-keyword\">while</span> f <span class=\"hljs-keyword\">and</span> f.<span class=\"hljs-built_in\">next</span>:\r\n            s = s.<span class=\"hljs-built_in\">next</span>\r\n            f = f.<span class=\"hljs-built_in\">next</span>.<span class=\"hljs-built_in\">next</span>\r\n        \r\n        <span class=\"hljs-comment\"># Return slow since fast is at the end</span>\r\n        <span class=\"hljs-comment\"># Slow is 1/2 of the list</span>\r\n        <span class=\"hljs-keyword\">return</span> s\n</code></pre>",
  "title": "Middle of the Linked List",
  "date": "March 17, 2025",
  "category": "Linked List",
  "categories": []
}