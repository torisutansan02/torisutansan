{
  "id": "dsa/factorial",
  "contentHtml": "<h1>Factorial</h1>\n<p>A <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>r</mi><mi>e</mi><mi>c</mi><mi>u</mi><mi>r</mi><mi>s</mi><mi>i</mi><mi>v</mi><mi>e</mi></mrow><annotation>recursive</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">rec</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">rs</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">v</span><span class=\"mord mathnormal\">e</span></span></span></span> function is one which calls itself.</p>\n<ul>\n<li>Usually with a different input.</li>\n</ul>\n<p>It breaks down a problem into smaller <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>s</mi><mi>u</mi><mi>b</mi><mi>p</mi><mi>r</mi><mi>o</mi><mi>b</mi><mi>l</mi><mi>e</mi><mi>m</mi><mi>s</mi></mrow><annotation>subproblems</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">ro</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">s</span></span></span></span>, solving them in reverse order.</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>R</mi><mi>e</mi><mi>c</mi><mi>u</mi><mi>r</mi><mi>s</mi><mi>i</mi><mi>v</mi><mi>e</mi></mrow><annotation>Recursive</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">R</span><span class=\"mord mathnormal\">ec</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">rs</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">v</span><span class=\"mord mathnormal\">e</span></span></span></span> can be turned into <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>i</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>v</mi><mi>e</mi></mrow><annotation>iterative</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">er</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">v</span><span class=\"mord mathnormal\">e</span></span></span></span> and vice-versa.</li>\n</ul>\n<h2>How to Approach?</h2>\n<p>Break it down into two parts.</p>\n<ul>\n<li>The <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>B</mi><mi>a</mi><mi>s</mi><mi>e</mi></mrow><annotation>Base</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">B</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">se</span></span></span></span> Case.</li>\n<li>The <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>R</mi><mi>e</mi><mi>c</mi><mi>u</mi><mi>r</mi><mi>s</mi><mi>i</mi><mi>v</mi><mi>e</mi></mrow><annotation>Recursive</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">R</span><span class=\"mord mathnormal\">ec</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">rs</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">v</span><span class=\"mord mathnormal\">e</span></span></span></span> Step.</li>\n</ul>\n<p>Essentially, you are making function calls to traverse to the base case.</p>\n<p>Afterwards, you process the sub-problems and return their answers until you reach the top.</p>\n<p>This type of problem is referred to as <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>b</mi><mi>o</mi><mi>t</mi><mi>t</mi><mi>o</mi><mi>m</mi><mo>−</mo><mi>u</mi><mi>p</mi></mrow><annotation>bottom-up</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">tt</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">m</span><span class=\"mspace\"></span><span class=\"mbin\">−</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">p</span></span></span></span>, where the final return statement is the top of the <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>o</mi><mi>n</mi><mi>e</mi><mo>−</mo><mi>b</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>c</mi><mi>h</mi></mrow><annotation>one-branch</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">e</span><span class=\"mspace\"></span><span class=\"mbin\">−</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">r</span><span class=\"mord mathnormal\">an</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">h</span></span></span></span> tree.</p>\n<p>Try solving with <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>n</mi><mo>=</mo><mn>5</mn></mrow><annotation>n = 5</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\"></span><span class=\"mrel\">=</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">5</span></span></span></span> yourself, then refer to the solution below.</p>\n<p><img src=\"/dsa/factorial/Factorial1.svg\" alt=\"Image\"></p>\n<h3>Time and Space</h3>\n<p>The time and space complexity are:</p>\n<ul>\n<li>T = <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation>O(n)</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>, because n calls are made to the factorial function.</li>\n<li>S = <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation>O(n)</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>, because a function call stack is used.</li>\n</ul>\n<h3>Solution</h3>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">factorial</span>(<span class=\"hljs-params\">n</span>):\n    <span class=\"hljs-comment\"># Base Case</span>\n    <span class=\"hljs-keyword\">if</span> n == <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">or</span> n == <span class=\"hljs-number\">0</span>:\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>\n    \n    <span class=\"hljs-comment\"># Recursive Step</span>\n    <span class=\"hljs-keyword\">return</span> n * factorial(n - <span class=\"hljs-number\">1</span>) <span class=\"hljs-comment\"># Traverse to base case then process sub-problems</span>\n</code></pre>",
  "title": "Factorial",
  "date": "June 11, 2025",
  "category": "DSA",
  "categories": []
}