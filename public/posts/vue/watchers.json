{
  "id": "vue/watchers",
  "contentHtml": "<h1>Vue Watchers</h1>\n<p>What is a watcher?</p>\n<ul>\n<li>Method that watches a data property with the same name.</li>\n<li>Runs every time the data property value changes.</li>\n<li>Use if a certain data property value requires an action.</li>\n</ul>\n<h2>Watcher Concept</h2>\n<p>It's reserved name is 'watcher'.</p>\n<p>A watcher method is never called.</p>\n<ul>\n<li>Automically called when a property value changes.</li>\n<li>New property value is available as an input argument to the watcher method\n<ul>\n<li>As is the old value.</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\r\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span> Tristan's Vue Project <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\r\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">style</span>></span>\r\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">style</span>></span>\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\r\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"app\"</span>></span>\r\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"range\"</span> <span class=\"hljs-attr\">min</span>=<span class=\"hljs-string\">\"0\"</span> <span class=\"hljs-attr\">max</span>=<span class=\"hljs-string\">\"100\"</span> <span class=\"hljs-attr\">step</span>=<span class=\"hljs-string\">\"1\"</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"rangeVal\"</span>></span>\r\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span> {{ rangeVal }} <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\r\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\r\n\r\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"https://unpkg.com/vue@3/dist/vue.global.js\"</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\r\n\r\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\r\n        <span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-title class_\">Vue</span>.<span class=\"hljs-title function_\">createApp</span>({\r\n            <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>) {\r\n                <span class=\"hljs-keyword\">return</span> {\r\n                    <span class=\"hljs-attr\">rangeVal</span>: <span class=\"hljs-number\">70</span>\r\n                }\r\n            },\r\n            <span class=\"hljs-attr\">watch</span>: {\r\n                <span class=\"hljs-title function_\">rangeVal</span>(<span class=\"hljs-params\">val</span>) {\r\n                    <span class=\"hljs-keyword\">if</span> (val > <span class=\"hljs-number\">30</span> &#x26;&#x26; val &#x3C; <span class=\"hljs-number\">60</span>) {\r\n                        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">rangeVal</span> = <span class=\"hljs-number\">30</span>;\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        app.<span class=\"hljs-title function_\">mount</span>(<span class=\"hljs-string\">'#app'</span>)\r\n    </span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<h2>Watcher With New and Old Values</h2>\n<p>New and old property value automatically available as input arguments to watcher methods.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\r\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span> Tristan's Vue Project <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\r\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">style</span>></span><span class=\"css\">\r\n        <span class=\"hljs-selector-id\">#app</span> > <span class=\"hljs-selector-tag\">div</span> {\r\n            <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">10rem</span>;\r\n            <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">10rem</span>;\r\n            <span class=\"hljs-attribute\">background-color</span>: lightgreen;\r\n        }\r\n    </span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">style</span>></span>\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\r\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"app\"</span>></span>\r\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">\"update\"</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\r\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span> {{ xDiff }} <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\r\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\r\n\r\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"https://unpkg.com/vue@3/dist/vue.global.js\"</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\r\n\r\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\r\n        <span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-title class_\">Vue</span>.<span class=\"hljs-title function_\">createApp</span>({\r\n            <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>) {\r\n                <span class=\"hljs-keyword\">return</span> {\r\n                    <span class=\"hljs-attr\">xPos</span>: <span class=\"hljs-number\">0</span>,\r\n                    <span class=\"hljs-attr\">xDiff</span>: <span class=\"hljs-number\">0</span>\r\n                }\r\n            },\r\n            <span class=\"hljs-attr\">watch</span>: {\r\n                <span class=\"hljs-title function_\">xPos</span>(<span class=\"hljs-params\">newVal, oldVal</span>) {\r\n                    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">xDiff</span> = newVal - oldVal\r\n                }\r\n            },\r\n            <span class=\"hljs-attr\">methods</span>: {\r\n                <span class=\"hljs-title function_\">update</span>(<span class=\"hljs-params\">event</span>) {\r\n                    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">xPos</span> = event.<span class=\"hljs-property\">offsetX</span>\r\n                }\r\n            }\r\n        })\r\n        app.<span class=\"hljs-title function_\">mount</span>(<span class=\"hljs-string\">'#app'</span>)\r\n    </span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<p>We can use these values to give feedback to the user the exact moment the input goes from invalid to valid.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\r\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span> Tristan's Vue Project <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\r\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">style</span>></span><span class=\"css\">\r\n        <span class=\"hljs-selector-class\">.valid</span> {\r\n            <span class=\"hljs-attribute\">color</span>: green;\r\n        }\r\n\r\n        <span class=\"hljs-selector-class\">.invalid</span> {\r\n            <span class=\"hljs-attribute\">color</span>: red;\r\n        }\r\n    </span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">style</span>></span>\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\r\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"app\"</span>></span>\r\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">label</span>></span>\r\n            <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"email\"</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"address\"</span>></span>\r\n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">label</span>></span>\r\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">:class</span>=<span class=\"hljs-string\">\"addClass\"</span>></span>{{ feedback }}<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\r\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\r\n\r\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"https://unpkg.com/vue@3/dist/vue.global.js\"</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\r\n\r\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\r\n        <span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-title class_\">Vue</span>.<span class=\"hljs-title function_\">createApp</span>({\r\n            <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>) {\r\n                <span class=\"hljs-keyword\">return</span> {\r\n                    <span class=\"hljs-attr\">address</span>: <span class=\"hljs-string\">''</span>,\r\n                    <span class=\"hljs-attr\">feedback</span>: <span class=\"hljs-string\">''</span>,\r\n                    <span class=\"hljs-attr\">addClass</span>: <span class=\"hljs-string\">'invalid'</span>\r\n                }\r\n            },\r\n            <span class=\"hljs-attr\">watch</span>: {\r\n                <span class=\"hljs-title function_\">address</span>(<span class=\"hljs-params\">newV, oldV</span>) {\r\n                    <span class=\"hljs-keyword\">if</span> (!newV.<span class=\"hljs-title function_\">includes</span>(<span class=\"hljs-string\">'@'</span>)) {\r\n                        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">feedback</span> = <span class=\"hljs-string\">'Bad email!'</span>;\r\n                        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">addClass</span> = <span class=\"hljs-string\">'invalid'</span>;\r\n                    }\r\n                    <span class=\"hljs-keyword\">else</span> {\r\n                        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">feedback</span> = <span class=\"hljs-string\">'Good!'</span>;\r\n                        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">addClass</span> = <span class=\"hljs-string\">'valid'</span>;\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        app.<span class=\"hljs-title function_\">mount</span>(<span class=\"hljs-string\">'#app'</span>)\r\n    </span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<h2>Watchers vs. Methods</h2>\n<p>Here are the differences between watches and methods:</p>\n<ul>\n<li>Methods are called from HTML.</li>\n<li>Methods called when an event happens.</li>\n<li>Methods automatically receive event object as input.</li>\n<li>Send other values we choose as input to a method.</li>\n<li>Watchers called when the watched data property value changes.\n<ul>\n<li>Happens automatically.</li>\n</ul>\n</li>\n<li>We cannot send other values with a watcher as an input.</li>\n</ul>\n<h2>Watchers vs. Computed Properties</h2>\n<p>They are both written as functions.</p>\n<p>They are both called automatically when a dependency changes.</p>\n<ul>\n<li>Never called from HTML.</li>\n</ul>\n<p>Some differences:</p>\n<ul>\n<li>Watchers depend on one property, the one they watch.</li>\n<li>Computed properties depend on many.</li>\n<li>Computed properties are used like data properties, they are dynamic.</li>\n<li>Watchers are not referred to from HTML.</li>\n</ul>",
  "title": "Vue Watchers",
  "date": "July 11, 2025",
  "category": "Vue",
  "categories": []
}