{
  "id": "vue/intro",
  "contentHtml": "<h1>Vue Intro</h1>\n<p>Vue is a front-end JavaScript framework. You can add it with a HTML <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>s</mi><mi>c</mi><mi>r</mi><mi>i</mi><mi>p</mi><mi>t</mi></mrow><annotation>script</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">scr</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">pt</span></span></span></span> tag.</p>\n<p>Vue extends HTML attributes with <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>D</mi><mi>i</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>v</mi><mi>e</mi><mi>s</mi></mrow><annotation>Directives</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">D</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">rec</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">v</span><span class=\"mord mathnormal\">es</span></span></span></span>, and binds data to HTML with <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>E</mi><mi>x</mi><mi>p</mi><mi>r</mi><mi>e</mi><mi>s</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mi>s</mi></mrow><annotation>Expressions</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">E</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">ress</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">s</span></span></span></span>.</p>\n<h2>Why Learn Vue?</h2>\n<ul>\n<li>Why Vue?\n<ul>\n<li>Simply and easy.</li>\n<li>Handles simple and complex projects.</li>\n<li>Growing popularity and open-source community.</li>\n<li>Vue takes care of the connection between HTML and JavaScript.</li>\n<li>Template-based syntax, two-way data binding, centralized state management.</li>\n</ul>\n</li>\n</ul>\n<h3>The Options API</h3>\n<ul>\n<li>Two Options:\n<ul>\n<li>Options API.</li>\n<li>Composition API.</li>\n</ul>\n</li>\n</ul>\n<p>The concepts are the same for both.</p>\n<p>Options API is easier to understand and has a more recognizable structure.</p>\n<h3>Start a webpage</h3>\n<ul>\n<li>Basic HTML file.</li>\n<li>Add a <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>d</mi><mi>i</mi><mi>v</mi></mrow><annotation>div</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">v</span></span></span></span> tag with <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>i</mi><mi>d</mi><mo>=</mo><mi>\"</mi><mi>a</mi><mi>p</mi><mi>p</mi><mi>\"</mi></mrow><annotation>id=\"app\"</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">d</span><span class=\"mspace\"></span><span class=\"mrel\">=</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">\"</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">pp</span><span class=\"mord\">\"</span></span></span></span>.</li>\n<li>Add a <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>s</mi><mi>c</mi><mi>r</mi><mi>i</mi><mi>p</mi><mi>t</mi></mrow><annotation>script</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">scr</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">pt</span></span></span></span> tag with a Vue link to handle Vue code.</li>\n<li>Add the Vue instance to the script tag.</li>\n</ul>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Tristan's Vue Page<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"app\"</span>></span>\n      {{ msg }} <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">br</span> /></span>\n      {{ 'Random Number: ' + Math.ceil(Math.random() * 3) }}\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"https://unpkg.com/vue@3/dist/vue.global.js\"</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n      <span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-title class_\">Vue</span>.<span class=\"hljs-title function_\">createApp</span>({\n        <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>) {\n          <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">msg</span>: <span class=\"hljs-string\">\"Hi Tristan!\"</span>\n          };\n        }\n      });\n      app.<span class=\"hljs-title function_\">mount</span>(<span class=\"hljs-string\">'#app'</span>);\n    </span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<h3>Text Interpolation</h3>\n<p>Text is taken from the Vue instance to show on a web page.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"app\"</span>></span> {{ message }} <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n</code></pre>\n<h3>JavaScript in Text Interpolation</h3>\n<p>You can use JavaScript expressions in double curly braces.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span> Tristan's Vue Project <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">style</span>></span><span class=\"css\">\n    <span class=\"hljs-selector-id\">#app</span> {\n      <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">20rem</span>;\n      <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">10rem</span>;\n      <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">2rem</span>;\n      <span class=\"hljs-attribute\">background-color</span>: lightgreen;\n    }\n  </span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">style</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span> JavaScript in Text Interpolation <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n  \n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"app\"</span>></span>\n    {{ message }}\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"https://unpkg.com/vue@3/dist/vue.global.js\"</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n    <span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-title class_\">Vue</span>.<span class=\"hljs-title function_\">createApp</span>({\n      <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>) {\n        <span class=\"hljs-keyword\">return</span> {\n          <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">'Hello world!'</span>\n        }\n      }\n    })\n    app.<span class=\"hljs-title function_\">mount</span>(<span class=\"hljs-string\">'#app'</span>)\n  </span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>",
  "title": "Vue.js Intro",
  "date": "July 9, 2025",
  "category": "Vue",
  "categories": []
}