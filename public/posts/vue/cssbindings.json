{
  "id": "vue/cssbindings",
  "contentHtml": "<h1>CSS Binding</h1>\n<p>V-Bind allows us to modify style and class attributes.</p>\n<p>However, CSS can be changed dynamically with Vue.</p>\n<h2>Inline Styling</h2>\n<p>Use v-bind:style.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span> Tristan's Vue Project <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">style</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">style</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span> In-line styling <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"app\"</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>\n            <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span> =<span class=\"hljs-string\">\"range\"</span> <span class=\"hljs-attr\">min</span>=<span class=\"hljs-string\">\"0\"</span> <span class=\"hljs-attr\">max</span>=<span class=\"hljs-string\">\"1\"</span> <span class=\"hljs-attr\">step</span>=<span class=\"hljs-string\">\"0.1\"</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"opacity\"</span>></span>\n            {{ opacity }}\n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span>></span>\n            <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">v-bind:style</span>=<span class=\"hljs-string\">\"{ backgroundColor: 'rgba(50, 50, 50, '+opacity+')' }\"</span>></span>\n                Drag the input to change opacity.\n            <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"https://unpkg.com/vue@3/dist/vue.global.js\"</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n            <span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-title class_\">Vue</span>.<span class=\"hljs-title function_\">createApp</span>({\n                <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>) {\n                    <span class=\"hljs-keyword\">return</span> {\n                        <span class=\"hljs-attr\">opacity</span>: <span class=\"hljs-number\">0.5</span>\n                    }\n                }\n            })\n            app.<span class=\"hljs-title function_\">mount</span>(<span class=\"hljs-string\">'#app'</span>)\n        </span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<h2>Assign a Class</h2>\n<p>User v-bind:class to assign classes to HTML tags.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span> Tristan's Vue Project <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">style</span>></span><span class=\"css\">\n        <span class=\"hljs-selector-class\">.borderClass</span> {\n            <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">1px</span> solid black;\n        }\n    </span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">style</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"app\"</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">v-for</span>=<span class=\"hljs-string\">\"(img, index) in images\"</span>></span>\n            <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">v-bind:src</span>=<span class=\"hljs-string\">\"img.url\"</span> <span class=\"hljs-attr\">v-on:click</span>=<span class=\"hljs-string\">\"select(index)\"</span> <span class=\"hljs-attr\">v-bind:class</span>=<span class=\"hljs-string\">\"{ borderClass: img.s }\"</span>></span>\n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"https://unpkg.com/vue@3/dist/vue.global.js\"</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n    \n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n        <span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-title class_\">Vue</span>.<span class=\"hljs-title function_\">createApp</span>({\n            <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>) {\n                <span class=\"hljs-keyword\">return</span> {\n                    <span class=\"hljs-attr\">images</span>: [\n                        { <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">'https://placehold.co/64x64'</span>, <span class=\"hljs-attr\">s</span>: <span class=\"hljs-literal\">false</span> },\n                        { <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">'https://placehold.co/64x64'</span>, <span class=\"hljs-attr\">s</span>: <span class=\"hljs-literal\">false</span> },\n                        { <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">'https://placehold.co/64x64'</span>, <span class=\"hljs-attr\">s</span>: <span class=\"hljs-literal\">false</span> },\n                        { <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">'https://placehold.co/64x64'</span>, <span class=\"hljs-attr\">s</span>: <span class=\"hljs-literal\">false</span> },\n                        { <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">'https://placehold.co/64x64'</span>, <span class=\"hljs-attr\">s</span>: <span class=\"hljs-literal\">false</span> }\n                    ]\n                }\n            },\n            <span class=\"hljs-attr\">methods</span>: {\n                <span class=\"hljs-title function_\">select</span>(<span class=\"hljs-params\">number</span>) {\n                    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">images</span>[number].<span class=\"hljs-property\">s</span> = !<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">images</span>[number].<span class=\"hljs-property\">s</span>\n                }\n            }\n        })\n        app.<span class=\"hljs-title function_\">mount</span>(<span class=\"hljs-string\">'#app'</span>)\n    </span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<h2>Other Ways to Assign Styles and Classes</h2>\n<ul>\n<li>Vue merges class and v-bind:class</li>\n<li>Objects containing one or more classes are assigned with v-bind:class=\"{}\"</li>\n<li>camelCase for inline-styling is preferred for v-bind:style</li>\n<li>CSS classes can be assigned with arrays / array notation / syntax.</li>\n</ul>\n<h2>Vue Merging Class and V-Bind:Class</h2>\n<p>Vue can merge both the classes for us.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"impClass\"</span> <span class=\"hljs-attr\">v-bind:class</span>=<span class=\"hljs-string\">\"{yelClass: isYellow}\"</span>></span>\n    Belongs to two classes.\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n</code></pre>\n<h2>Assign More Than One Class</h2>\n<p>Use a comma to separate and assign multiple classes.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">v-bind:class</span>=<span class=\"hljs-string\">\"{yelClass: isYellow, impClass: isImportant}\"</span>></span>\n    Tag belongs to 'yelClass' and 'impClass'.\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n</code></pre>\n<h2>Camel Case and Kebab Case</h2>\n<ul>\n<li>Can use both for v-bind:style\n<ul>\n<li>Though camelCase is preferred.</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">v-bind:style</span>=<span class=\"hljs-string\">\"{ backgroundColor: 'lightpink', 'font-weight': 'bolder' }\"</span>></span>\n    Pink background and bolder font.\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n\nDifferences between camelCase and kebab-case:\n- camelCase:\n    - First word and first character not capitalized.\n    - Proceeding words and first characters are capitalized.\n- kebab-case:\n    - Words separated by dashes.\n</code></pre>\n<h2>Array Syntax with v-bind:class</h2>\n<p>Use array syntax to add multiple classes.</p>\n<ul>\n<li>Use both classes that depend on a Vue property and classes that do not depend on a Vue property.</li>\n</ul>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">v-bind:class</span>=<span class=\"hljs-string\">\"[{ impClass: isImportant }, 'yelClass']\"</span>></span>\n    Div tag belongs to one or two classes depending on the isImportant property.\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n</code></pre>",
  "title": "Vue CSS Binding",
  "date": "July 11, 2025",
  "category": "Vue",
  "categories": []
}