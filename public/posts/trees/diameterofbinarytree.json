{
  "id": "trees/diameterofbinarytree",
  "contentHtml": "<h1>Diameter of Binary Tree</h1>\n<p>You are given the <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>r</mi><mi>o</mi><mi>o</mi><mi>t</mi></mrow><annotation>root</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">roo</span><span class=\"mord mathnormal\">t</span></span></span></span> of a binary tree and you must return the length of its diameter.</p>\n<p>Its diameter is the length of the longest path.</p>\n<p>The length of a path is represented by the number of edges in between two nodes.</p>\n<p><img src=\"/trees/diameterOfBinaryTree/DiameterOfBinaryTree1.png\" alt=\"Image\"></p>\n<h2>How To Solve?</h2>\n<p>It's wise to look at the <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>l</mi><mi>e</mi><mi>a</mi><mi>f</mi></mrow><annotation>leaf</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">f</span></span></span></span> nodes first. From there, you can work upwards to see if it creates the longest path.</p>\n<p>This intuition helps lead us to the solution.</p>\n<h3>Tree</h3>\n<p>Notice how you simply looking at the leaf nodes tells us something about its <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>p</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>n</mi><mi>t</mi></mrow><annotation>parent</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">re</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span></span></span></span> node.</p>\n<p>The <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>p</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>n</mi><mi>t</mi></mrow><annotation>parent</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">re</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span></span></span></span> node with an <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>e</mi><mi>d</mi><mi>g</mi><mi>e</mi></mrow><annotation>edge</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">g</span><span class=\"mord mathnormal\">e</span></span></span></span> to a <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>l</mi><mi>e</mi><mi>a</mi><mi>f</mi></mrow><annotation>leaf</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">f</span></span></span></span> node means that its diameter is at least <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>1</mn></mrow><annotation>1</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">1</span></span></span></span> up until that point?</p>\n<p>If we take a look at the <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>1</mn><mi>s</mi><mi>t</mi></mrow><annotation>1st</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">1</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span></span></span></span> example, we can process <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>4</mn></mrow><annotation>4</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">4</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>5</mn></mrow><annotation>5</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">5</span></span></span></span> first. They both have a length of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>0</mn></mrow><annotation>0</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">0</span></span></span></span> which is helpful.</p>\n<p>Then we look at <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>2</mn></mrow><annotation>2</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">2</span></span></span></span> and it takes the <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow><annotation>max</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">ma</span><span class=\"mord mathnormal\">x</span></span></span></span> of both the lengths of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>4</mn></mrow><annotation>4</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">4</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>5</mn></mrow><annotation>5</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">5</span></span></span></span> which is <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>0</mn></mrow><annotation>0</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">0</span></span></span></span> then it increments <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>1</mn></mrow><annotation>1</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">1</span></span></span></span> to get its length.</p>\n<p>Afterwards, we process <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>3</mn></mrow><annotation>3</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">3</span></span></span></span> which has a length of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>0</mn></mrow><annotation>0</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">0</span></span></span></span>, and we have only one node left.</p>\n<p>We then look at the <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>r</mi><mi>o</mi><mi>o</mi><mi>t</mi></mrow><annotation>root</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">roo</span><span class=\"mord mathnormal\">t</span></span></span></span> and add <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>(</mo><mn>2</mn><mo>+</mo><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi><mo>+</mo><mi>r</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo>)</mo></mrow><annotation>(2 + left + right)</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mspace\"></span><span class=\"mbin\">+</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">f</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\"></span><span class=\"mbin\">+</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">r</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">g</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span> which is <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>(</mo><mn>2</mn><mo>+</mo><mi>n</mi><mi>o</mi><mi>d</mi><mi>e</mi><mo>(</mo><mn>2</mn><mo>)</mo><mo>+</mo><mi>n</mi><mi>o</mi><mi>d</mi><mi>e</mi><mo>(</mo><mn>3</mn><mo>)</mo><mo>)</mo><mo>=</mo><mn>3</mn></mrow><annotation>(2 + node(2) + node(3)) = 3</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mspace\"></span><span class=\"mbin\">+</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mspace\"></span><span class=\"mbin\">+</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mopen\">(</span><span class=\"mord\">3</span><span class=\"mclose\">))</span><span class=\"mspace\"></span><span class=\"mrel\">=</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">3</span></span></span></span> which is our result.</p>\n<p>Try using the example trees above or create ones, including ones where traversing through the <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>r</mi><mi>o</mi><mi>o</mi><mi>t</mi></mrow><annotation>root</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">roo</span><span class=\"mord mathnormal\">t</span></span></span></span> does not give the <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow><annotation>max</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">ma</span><span class=\"mord mathnormal\">x</span></span></span></span> path.</p>\n<ul>\n<li>I will include a graphic below to help illustrate this algorithm, which is <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>p</mi><mi>o</mi><mi>s</mi><mi>t</mi><mi>o</mi><mi>r</mi><mi>d</mi><mi>e</mi><mi>r</mi></mrow><annotation>postorder</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">os</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">or</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">er</span></span></span></span> traversal.\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi><mo>−</mo><mi>r</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo>−</mo><mi>r</mi><mi>o</mi><mi>o</mi><mi>t</mi></mrow><annotation>left-right-root</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">f</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\"></span><span class=\"mbin\">−</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">r</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">g</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\"></span><span class=\"mbin\">−</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">roo</span><span class=\"mord mathnormal\">t</span></span></span></span> traversal.</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/trees/diameterOfBinaryTree/DiameterOfBinaryTree2.png\" alt=\"Image\"></p>\n<h3>Helpful Hints</h3>\n<ul>\n<li>Return <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation>-1</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span></span> if <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>n</mi><mi>o</mi><mi>t</mi></mrow><annotation>not</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">t</span></span></span></span> root.\n<ul>\n<li>Node doesn't exist.</li>\n</ul>\n</li>\n<li>How to get the max if we found a path?\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>r</mi><mi>e</mi><mi>s</mi><mo>[</mo><mn>0</mn><mo>]</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo>(</mo><mi>r</mi><mi>e</mi><mi>s</mi><mo>[</mo><mn>0</mn><mo>]</mo><mo>,</mo><mn>2</mn><mo>+</mo><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi><mo>+</mo><mi>r</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo>)</mo></mrow><annotation>res[0] = max(res[0], 2 + left + right)</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">res</span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mclose\">]</span><span class=\"mspace\"></span><span class=\"mrel\">=</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">ma</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">res</span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">2</span><span class=\"mspace\"></span><span class=\"mbin\">+</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">f</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\"></span><span class=\"mbin\">+</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">r</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">g</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n</li>\n</ul>\n<h3>Tree Solution</h3>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-comment\"># Definition for a binary tree node.</span>\n<span class=\"hljs-comment\"># class TreeNode:</span>\n<span class=\"hljs-comment\">#     def __init__(self, val=0, left=None, right=None):</span>\n<span class=\"hljs-comment\">#         self.val = val</span>\n<span class=\"hljs-comment\">#         self.left = left</span>\n<span class=\"hljs-comment\">#         self.right = right</span>\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Solution</span>:\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">diameterOfBinaryTree</span>(<span class=\"hljs-params\">self, root: <span class=\"hljs-type\">Optional</span>[TreeNode]</span>) -> <span class=\"hljs-built_in\">int</span>:\n        <span class=\"hljs-comment\"># Set the res to an array with 0</span>\n        res = [<span class=\"hljs-number\">0</span>]\n\n        <span class=\"hljs-comment\"># Create a dfs function</span>\n        <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">dfs</span>(<span class=\"hljs-params\">root</span>):\n            <span class=\"hljs-comment\"># Does a node not exist?</span>\n            <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> root:\n                <span class=\"hljs-keyword\">return</span> -<span class=\"hljs-number\">1</span>\n            \n            <span class=\"hljs-comment\"># Postorder DFS</span>\n            L = dfs(root.left)\n            R = dfs(root.right)\n\n            <span class=\"hljs-comment\"># Get the maximum height</span>\n            res[<span class=\"hljs-number\">0</span>] = <span class=\"hljs-built_in\">max</span>(res[<span class=\"hljs-number\">0</span>], <span class=\"hljs-number\">2</span> + L + R)\n\n            <span class=\"hljs-comment\"># Increment the path by 1</span>\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span> + <span class=\"hljs-built_in\">max</span>(L, R)\n\n        <span class=\"hljs-comment\"># Call DFS on root</span>\n        dfs(root)\n\n        <span class=\"hljs-keyword\">return</span> res[<span class=\"hljs-number\">0</span>]\n</code></pre>",
  "title": "Diameter of Binary Tree",
  "date": "March 18, 2025",
  "category": "Trees",
  "categories": []
}