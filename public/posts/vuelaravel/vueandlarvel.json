{
  "id": "vuelaravel/vueandlarvel",
  "contentHtml": "<h1>Overview</h1>\n<p>This project was made to test my skills in Vue and Laravel.</p>\n<h2>How to Setup Vue + Laravel</h2>\n<p>Install PHP and Composer.</p>\n<p>TODO: Explain how to install PHP and Composer.</p>\n<p>Run the following commands:</p>\n<pre><code>This creates the project. For me, it was a macro counter.\ncomposer create-project --prefer-dist laravel/laravel macro-counter\n\nThis changes directories to the project.\ncd macro-counter\n\nThis creates the files .env.example and .env\ncp .env.example .env\n\nThis is the artisan key command to generate a key.\nphp artisan key:generate\n</code></pre>\n<p>Afterwards, update the .env files\nDB_DATABASE=mydatabase\nDB_USERNAME=root\nDB_PASSWORD=</p>\n<p>Then, run these commands.</p>\n<pre><code>Migrate the database with the artisan migrate command.\nphp artisan migrate\n\nInstall node modules.\nnpm install\n\nInstall the most recent version of Vue and its additional dependencies.\nnpm install vue@latest vue-router@latest @vitejs/plugin-vue\n</code></pre>\n<p>Afterwards, configure Vite for Vue.</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>v</mi><mi>i</mi><mi>t</mi><mi>e</mi><mi>.</mi><mi>c</mi><mi>o</mi><mi>n</mi><mi>f</mi><mi>i</mi><mi>g</mi><mi>.</mi><mi>j</mi><mi>s</mi></mrow><annotation>vite.config.js</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">co</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord\">.</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal\">s</span></span></span></span></li>\n</ul>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">import</span> { defineConfig } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vite'</span>;\n<span class=\"hljs-keyword\">import</span> vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@vitejs/plugin-vue'</span>;\n<span class=\"hljs-keyword\">import</span> laravel <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'laravel-vite-plugin'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title function_\">defineConfig</span>({\n    <span class=\"hljs-attr\">plugins</span>: [\n        <span class=\"hljs-title function_\">laravel</span>({\n            <span class=\"hljs-attr\">input</span>: [<span class=\"hljs-string\">'resources/js/app.js'</span>],\n            <span class=\"hljs-attr\">refresh</span>: <span class=\"hljs-literal\">true</span>,\n        }),\n        <span class=\"hljs-title function_\">vue</span>()\n    ]\n})\n</code></pre>\n<p>Create a Vue App Entry Point.</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>r</mi><mi>e</mi><mi>s</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>/</mi><mi>j</mi><mi>s</mi><mi>/</mi><mi>a</mi><mi>p</mi><mi>p</mi><mi>.</mi><mi>j</mi><mi>s</mi></mrow><annotation>resources/js/app.js</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">reso</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">rces</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">pp</span><span class=\"mord\">.</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal\">s</span></span></span></span></li>\n</ul>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">import</span> { createApp } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">App</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./components/App.vue'</span>;\n<span class=\"hljs-keyword\">import</span> router <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./router'</span>;\n\n<span class=\"hljs-title function_\">create</span>(<span class=\"hljs-title class_\">App</span>).<span class=\"hljs-title function_\">use</span>(router).<span class=\"hljs-title function_\">mount</span>(<span class=\"hljs-string\">'#app'</span>);\n</code></pre>\n<p>Create a simple Vue Component</p>\n<pre><code class=\"language-js\">&#x3C;template>\n    <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span> Hello, world! <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span></span>\n&#x3C;/template>\n\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">setup</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span></span>\n\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">scoped</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">style</span>></span></span>\n</code></pre>\n<p>Install the Vue Router.</p>\n<pre><code>npm install vue-router@latest\n</code></pre>\n<p>Create a router file.</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>r</mi><mi>e</mi><mi>s</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>/</mi><mi>j</mi><mi>s</mi><mi>/</mi><mi>r</mi><mi>o</mi><mi>u</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi>/</mi><mi>i</mi><mi>n</mi><mi>d</mi><mi>e</mi><mi>x</mi><mi>.</mi><mi>j</mi><mi>s</mi></mrow><annotation>resources/js/router/index.js</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">reso</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">rces</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">ro</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">er</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">in</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">.</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal\">s</span></span></span></span></li>\n</ul>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">import</span> { createRouter, createWebHistory } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue-router'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Home</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'../components/Home.vue'</span>;\n\n<span class=\"hljs-keyword\">const</span> routes = [\n    { <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">'/'</span>, <span class=\"hljs-attr\">component</span>: <span class=\"hljs-title class_\">Home</span> }\n];\n\n<span class=\"hljs-keyword\">const</span> router = <span class=\"hljs-title function_\">createRouter</span>({\n    <span class=\"hljs-attr\">history</span>: <span class=\"hljs-title function_\">createWebHistory</span>(),\n    routes,\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> router;\n</code></pre>\n<p>Create a Home Vue component.</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>r</mi><mi>e</mi><mi>s</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>/</mi><mi>j</mi><mi>s</mi><mi>/</mi><mi>c</mi><mi>o</mi><mi>m</mi><mi>p</mi><mi>o</mi><mi>n</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>s</mi><mi>/</mi><mi>H</mi><mi>o</mi><mi>m</mi><mi>e</mi><mi>.</mi><mi>v</mi><mi>u</mi><mi>e</mi></mrow><annotation>resources/js/components/Home.vue</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">reso</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">rces</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">co</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">Ho</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">e</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">vu</span><span class=\"mord mathnormal\">e</span></span></span></span></li>\n</ul>\n<pre><code class=\"language-js\">&#x3C;template>\n    <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span> Testing home page! <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span></span>\n&#x3C;/template>\n</code></pre>\n<p>Then update the Blade template.</p>\n<pre><code class=\"language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en\"</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span> Tristan's Vue + Laravel Project <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n    @vite(['resources.js/app.js'])\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"app\"</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<p>Compile assets with Vite and run the Laravel server.</p>\n<pre><code>npm run dev\nphp artisan serve\n</code></pre>\n<p>Additional libraries I've installed for this project:</p>\n<pre><code>npm install @tailwindcss/postcss\nnpm install @tailwindcss/vite\nnpm install autoprefixer\nnpm install axios\nnpm install concurrently\nnpm install laravel-vite-plugin\nnpm install postcss\nnpm install tailwindcss\nnpm install vite\n</code></pre>\n<h2>Database Setup</h2>\n<p>Create a new migration</p>\n<pre><code>php artisan make:migration create_macros_table\n</code></pre>\n<p>Edit the DB Schema</p>\n<pre><code class=\"language-php\"><span class=\"hljs-meta\">&#x3C;?php</span>\n\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">Illuminate</span>\\<span class=\"hljs-title\">Database</span>\\<span class=\"hljs-title\">Migrations</span>\\<span class=\"hljs-title\">Migration</span>;\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">Illuminate</span>\\<span class=\"hljs-title\">Database</span>\\<span class=\"hljs-title\">Schema</span>\\<span class=\"hljs-title\">Blueprint</span>;\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">Illuminate</span>\\<span class=\"hljs-title\">Support</span>\\<span class=\"hljs-title\">Facades</span>\\<span class=\"hljs-title\">Schema</span>;\n\n<span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Migration</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">up</span>(<span class=\"hljs-params\"></span>): <span class=\"hljs-title\">void</span>\n    </span>{\n        <span class=\"hljs-title class_\">Schema</span>::<span class=\"hljs-title function_ invoke__\">create</span>(<span class=\"hljs-string\">'tasks'</span>, function (Blueprint <span class=\"hljs-variable\">$table</span>)) {\n            <span class=\"hljs-variable\">$table</span>-><span class=\"hljs-title function_ invoke__\">id</span>();\n            <span class=\"hljs-variable\">$table</span>-><span class=\"hljs-keyword\">string</span>(<span class=\"hljs-string\">'title'</span>);\n            <span class=\"hljs-variable\">$table</span>-><span class=\"hljs-title function_ invoke__\">timestamps</span>();\n            <span class=\"hljs-variable\">$table</span>-><span class=\"hljs-keyword\">integer</span>(<span class=\"hljs-string\">'protein'</span>)-><span class=\"hljs-keyword\">default</span>(<span class=\"hljs-number\">0</span>);\n            <span class=\"hljs-variable\">$table</span>-><span class=\"hljs-keyword\">integer</span>(<span class=\"hljs-string\">'carbs'</span>)-><span class=\"hljs-keyword\">default</span>(<span class=\"hljs-number\">0</span>);\n            <span class=\"hljs-variable\">$table</span>-><span class=\"hljs-keyword\">integer</span>(<span class=\"hljs-string\">'fat'</span>)-><span class=\"hljs-keyword\">default</span>(<span class=\"hljs-number\">0</span>);\n        }\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">down</span>(<span class=\"hljs-params\"></span>): <span class=\"hljs-title\">void</span>\n    </span>{\n        <span class=\"hljs-title class_\">Schema</span>::<span class=\"hljs-title function_ invoke__\">dropIfExists</span>(<span class=\"hljs-string\">'tasks'</span>);\n    }\n}\n\n<span class=\"hljs-meta\">?></span>\n</code></pre>\n<p>Then proceed to run all migrations.</p>\n<ul>\n<li>Applies all migrations to your database.</li>\n</ul>\n<pre><code>php artisan migrate\n</code></pre>\n<p>How to rollback the last migration?</p>\n<pre><code>php artisan migrate:rollback\n</code></pre>\n<p>How to create a database seeder?</p>\n<ul>\n<li>Used to insert dummy data into database.</li>\n</ul>\n<pre><code>php artisan make:seeder TaskSeeder\nphp artisan db:seed --class=TaskSeeder\n</code></pre>\n<p>Then create a model.</p>\n<pre><code>php artisan make:model Task\n</code></pre>\n<p>Then create a controller.</p>\n<pre><code>php artisan make:controller TaskController\n</code></pre>\n<p>If you want CRUD methods scaffolded:</p>\n<pre><code>php artisan make:controller TaskController --resource\n</code></pre>\n<p>Then list all routes</p>\n<pre><code>php artisan route:list\n</code></pre>\n<p>TLDR Laravel Dev Workflow:</p>\n<pre><code>composer create-project laravel/laravel macro-counter\ncd macro-counter\nphp artisan serve\n\nFor creating model and migration\nphp artisan make:model Task -m\nphp artisan migrate\n\nphp artisan make:controller TaskController --resource\nphp artisan route:list\n\nphp artisan make:seeder TaskSeeder\nphp artisan db:seed --class=TaskSeeder\n</code></pre>\n<h3>Task Model</h3>\n<p>Edit the Task Model.</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>a</mi><mi>p</mi><mi>p</mi><mi>/</mi><mi>M</mi><mi>o</mi><mi>d</mi><mi>e</mi><mi>l</mi><mi>s</mi><mi>/</mi><mi>T</mi><mi>a</mi><mi>s</mi><mi>k</mi><mi>.</mi><mi>p</mi><mi>h</mi><mi>p</mi></mrow><annotation>app/Models/Task.php</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">pp</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">p</span></span></span></span></li>\n</ul>\n<pre><code class=\"language-php\"><span class=\"hljs-meta\">&#x3C;?php</span>\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title class_\">App</span>\\<span class=\"hljs-title class_\">Models</span>;\n\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">Illuminate</span>\\<span class=\"hljs-title\">Database</span>\\<span class=\"hljs-title\">Eloquent</span>\\<span class=\"hljs-title\">Model</span>;\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Task</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Model</span> </span>{\n    <span class=\"hljs-comment\">// Model Properties</span>\n    <span class=\"hljs-keyword\">protected</span> <span class=\"hljs-variable\">$fillable</span> = [<span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'protein'</span>, <span class=\"hljs-string\">'carbs'</span>, <span class=\"hljs-string\">'fat'</span>];\n}\n\n<span class=\"hljs-meta\">?></span>\n</code></pre>\n<h3>Task Controller</h3>\n<p>Edit the Task Controller.</p>\n<pre><code class=\"language-php\"><span class=\"hljs-meta\">&#x3C;?php</span>\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title class_\">App</span>\\<span class=\"hljs-title class_\">Http</span>\\<span class=\"hljs-title class_\">Controllers</span>;\n\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">App</span>\\<span class=\"hljs-title\">Http</span>\\<span class=\"hljs-title\">Controller</span>\\<span class=\"hljs-title\">Controller</span>;\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">Illuminate</span>\\<span class=\"hljs-title\">Http</span>\\<span class=\"hljs-title\">Request</span>;\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">App</span>\\<span class=\"hljs-title\">Models</span>\\<span class=\"hljs-title\">Task</span>;\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">TaskController</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Controller</span> </span>{\n    <span class=\"hljs-comment\">// Read all entries</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">read</span>(<span class=\"hljs-params\"></span>) </span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">Task</span>::<span class=\"hljs-title function_ invoke__\">all</span>();\n    }\n\n    <span class=\"hljs-comment\">// Read one entry</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">readOne</span>(<span class=\"hljs-params\"></span>) </span>{\n        <span class=\"hljs-variable\">$task</span> = <span class=\"hljs-title class_\">Task</span>::<span class=\"hljs-title function_ invoke__\">find</span>(<span class=\"hljs-variable\">$id</span>);\n        <span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-variable\">$task</span>) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title function_ invoke__\">response</span>()-><span class=\"hljs-title function_ invoke__\">json</span>([<span class=\"hljs-string\">'error'</span> => <span class=\"hljs-string\">'Task not found'</span>], <span class=\"hljs-number\">404</span>);\n        }\n    }\n\n    <span class=\"hljs-comment\">// Create one entry</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">create</span>(<span class=\"hljs-params\">Request <span class=\"hljs-variable\">$request</span></span>) </span>{\n        <span class=\"hljs-variable\">$validated</span> = <span class=\"hljs-variable\">$request</span>-><span class=\"hljs-title function_ invoke__\">validate</span>({\n            <span class=\"hljs-string\">'title'</span> => <span class=\"hljs-string\">'required|string|max:10'</span>,\n            <span class=\"hljs-string\">'protein'</span> => <span class=\"hljs-string\">'required|integer|min:0|max:1000'</span>,\n            <span class=\"hljs-string\">'carbs'</span> => <span class=\"hljs-string\">'required|integer|min:0|max:1000'</span>,\n            <span class=\"hljs-string\">'fat'</span> => <span class=\"hljs-string\">'required|integer|min:0|max:1000'</span>,\n        });\n\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">Task</span>::<span class=\"hljs-title function_ invoke__\">create</span>(<span class=\"hljs-variable\">$validated</span>);\n    }\n\n    <span class=\"hljs-comment\">// Update one entry</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">update</span>(<span class=\"hljs-params\">Request <span class=\"hljs-variable\">$request</span>, <span class=\"hljs-variable\">$id</span></span>) </span>{\n        <span class=\"hljs-variable\">$task</span> = <span class=\"hljs-title class_\">Task</span>::<span class=\"hljs-title function_ invoke__\">find</span>(<span class=\"hljs-variable\">$id</span>);\n        <span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-variable\">$task</span>) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title function_ invoke__\">response</span>()-><span class=\"hljs-title function_ invoke__\">json</span>([<span class=\"hljs-string\">'error'</span>] => [<span class=\"hljs-string\">'Task not found'</span>], <span class=\"hljs-number\">404</span>);\n        }\n\n        <span class=\"hljs-variable\">$validated</span> = <span class=\"hljs-variable\">$request</span>-><span class=\"hljs-title function_ invoke__\">validate</span>([\n            <span class=\"hljs-string\">'title'</span> => <span class=\"hljs-string\">'required|string|max:10'</span>,\n            <span class=\"hljs-string\">'protein'</span> => <span class=\"hljs-string\">'required|integer|min:0|max:1000'</span>,\n            <span class=\"hljs-string\">'carbs'</span> => <span class=\"hljs-string\">'required|integer|min:0|max:1000'</span>,\n            <span class=\"hljs-string\">'fat'</span> => <span class=\"hljs-string\">'required|integer|min:0|max:1000'</span>,\n        ]);\n    }\n\n    <span class=\"hljs-comment\">// Delete one entry</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">delete</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$id</span></span>) </span>{\n        <span class=\"hljs-variable\">$task</span> = <span class=\"hljs-title class_\">Task</span>::<span class=\"hljs-title function_ invoke__\">find</span>(<span class=\"hljs-variable\">$id</span>);\n        <span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-variable\">$task</span>) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title function_ invoke__\">response</span>()-><span class=\"hljs-title function_ invoke__\">json</span>([<span class=\"hljs-string\">'error'</span>] => [<span class=\"hljs-string\">'Task not found'</span>], <span class=\"hljs-number\">404</span>);\n        }\n\n        <span class=\"hljs-variable\">$task</span>-><span class=\"hljs-title function_ invoke__\">delete</span>();\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title function_ invoke__\">response</span>()-><span class=\"hljs-title function_ invoke__\">json</span>([<span class=\"hljs-string\">'message'</span> => <span class=\"hljs-string\">'Task deleted'</span>]);\n    }\n}\n<span class=\"hljs-meta\">?></span>\n</code></pre>\n<h3>Routes</h3>\n<p>Go to your routes file.</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>r</mi><mi>o</mi><mi>u</mi><mi>t</mi><mi>e</mi><mi>s</mi><mi>/</mi><mi>a</mi><mi>p</mi><mi>i</mi><mi>.</mi><mi>p</mi><mi>h</mi><mi>p</mi></mrow><annotation>routes/api.php</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">ro</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">es</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">i</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">p</span></span></span></span></li>\n</ul>\n<pre><code class=\"language-php\"><span class=\"hljs-meta\">&#x3C;?php</span>\n\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">Illuminate</span>\\<span class=\"hljs-title\">Support</span>\\<span class=\"hljs-title\">Facades</span>\\<span class=\"hljs-title\">Route</span>;\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">App</span>\\<span class=\"hljs-title\">Http</span>\\<span class=\"hljs-title\">Controllers</span>\\<span class=\"hljs-title\">TaskController</span>;\n\n<span class=\"hljs-title class_\">Route</span>::<span class=\"hljs-title function_ invoke__\">get</span>(<span class=\"hljs-string\">'/tasks'</span>, [<span class=\"hljs-title class_\">TaskController</span>::<span class=\"hljs-variable language_\">class</span>, <span class=\"hljs-string\">'read'</span>]);\n<span class=\"hljs-title class_\">Route</span>::<span class=\"hljs-title function_ invoke__\">get</span>(<span class=\"hljs-string\">'/tasks/{id}'</span>, [<span class=\"hljs-title class_\">TaskController</span>::<span class=\"hljs-variable language_\">class</span>, <span class=\"hljs-string\">'readOne'</span>]);\n<span class=\"hljs-title class_\">Route</span>::<span class=\"hljs-title function_ invoke__\">post</span>(<span class=\"hljs-string\">'/tasks'</span>, [<span class=\"hljs-title class_\">TaskController</span>::<span class=\"hljs-variable language_\">class</span>, <span class=\"hljs-string\">'create'</span>]);\n<span class=\"hljs-title class_\">Route</span>::<span class=\"hljs-title function_ invoke__\">put</span>(<span class=\"hljs-string\">'/tasks/{id}'</span>, [<span class=\"hljs-title class_\">TaskController</span>::<span class=\"hljs-variable language_\">class</span>, <span class=\"hljs-string\">'update'</span>]);\n<span class=\"hljs-title class_\">Route</span>::<span class=\"hljs-title function_ invoke__\">delete</span>(<span class=\"hljs-string\">'/tasks/{id}'</span>, [<span class=\"hljs-title class_\">TaskController</span>::<span class=\"hljs-variable language_\">class</span>, <span class=\"hljs-string\">'delete'</span>]);\n\n<span class=\"hljs-meta\">?></span>\n</code></pre>\n<p>Your backend is now setup to work with the frontend.</p>\n<h2>Frontend Setup</h2>\n<p>Create a folder called components with three files:</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>r</mi><mi>e</mi><mi>s</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>/</mi><mi>j</mi><mi>s</mi><mi>/</mi><mi>c</mi><mi>o</mi><mi>m</mi><mi>p</mi><mi>o</mi><mi>n</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>s</mi></mrow><annotation>resources/js/components</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">reso</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">rces</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">co</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">s</span></span></span></span>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi><mi>o</mi><mi>m</mi><mi>e</mi><mi>.</mi><mi>v</mi><mi>u</mi><mi>e</mi></mrow><annotation>Home.vue</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">Ho</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">e</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">vu</span><span class=\"mord mathnormal\">e</span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>A</mi><mi>p</mi><mi>p</mi><mi>.</mi><mi>v</mi><mi>u</mi><mi>e</mi></mrow><annotation>App.vue</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">pp</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">vu</span><span class=\"mord mathnormal\">e</span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>T</mi><mi>a</mi><mi>s</mi><mi>k</mi><mi>s</mi><mi>.</mi><mi>v</mi><mi>u</mi><mi>e</mi></mrow><annotation>Tasks.vue</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">vu</span><span class=\"mord mathnormal\">e</span></span></span></span></li>\n</ul>\n</li>\n</ul>\n<p>All three Vue files should have the following code:</p>\n<ul>\n<li>Single File Components (SFCs).</li>\n</ul>\n<pre><code class=\"language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">template</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">template</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">setup</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">scoped</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">style</span>></span>\n</code></pre>\n<p>Afterwards, go to the file:</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>r</mi><mi>e</mi><mi>s</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>/</mi><mi>j</mi><mi>s</mi><mi>/</mi><mi>a</mi><mi>p</mi><mi>p</mi><mi>.</mi><mi>j</mi><mi>s</mi></mrow><annotation>resources/js/app.js</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">reso</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">rces</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">pp</span><span class=\"mord\">.</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal\">s</span></span></span></span></li>\n</ul>\n<p>Add the following code:</p>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">import</span> { createApp } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">App</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./components/App.vue'</span>;\n<span class=\"hljs-keyword\">import</span> router <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./router'</span>;\n\n<span class=\"hljs-comment\">// Create Vue Instance</span>\n<span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-title function_\">createApp</span>(<span class=\"hljs-title class_\">App</span>);\n\napp.<span class=\"hljs-title function_\">use</span>(router);\n\n<span class=\"hljs-comment\">// Vue Wrapper</span>\napp.<span class=\"hljs-title function_\">mount</span>(<span class=\"hljs-string\">'#app'</span>);\n</code></pre>\n<p>Afterwards, we should set up our routing paths:</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>/</mi></mrow><annotation>/</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">/</span></span></span></span>\n<ul>\n<li>Home page.</li>\n</ul>\n</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>/</mi><mi>t</mi><mi>a</mi><mi>s</mi><mi>k</mi><mi>s</mi></mrow><annotation>/tasks</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">/</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathnormal\">s</span></span></span></span>\n<ul>\n<li>Task page.</li>\n</ul>\n</li>\n</ul>\n<p>We must edit the file in:</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>r</mi><mi>e</mi><mi>s</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>/</mi><mi>j</mi><mi>s</mi><mi>/</mi><mi>r</mi><mi>o</mi><mi>u</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi>/</mi><mi>i</mi><mi>n</mi><mi>d</mi><mi>e</mi><mi>x</mi><mi>.</mi><mi>j</mi><mi>s</mi></mrow><annotation>resources/js/router/index.js</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">reso</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">rces</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">ro</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">er</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">in</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">.</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal\">s</span></span></span></span></li>\n</ul>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">import</span> { createRouter, createWebHistory } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue-router'</span>;\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Home</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'../components/Home.vue'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Tasks</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'../components/Tasks.vue'</span>;\n\n<span class=\"hljs-keyword\">const</span> routes = [\n    { <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">'/'</span>, <span class=\"hljs-attr\">component</span>: <span class=\"hljs-title class_\">Home</span> },\n    { <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">'/tasks'</span>, <span class=\"hljs-attr\">component</span>: <span class=\"hljs-title class_\">Tasks</span> }\n];\n\n<span class=\"hljs-keyword\">const</span> router = <span class=\"hljs-title function_\">createRouter</span>({\n    <span class=\"hljs-attr\">history</span>: <span class=\"hljs-title function_\">createWebHistory</span>(),\n    routes,\n});\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> router;\n</code></pre>\n<p>Our router is now set up correctly for the app.</p>\n<p>Let's alter our App component to now use display the routers.</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>r</mi><mi>e</mi><mi>s</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>/</mi><mi>j</mi><mi>s</mi><mi>/</mi><mi>c</mi><mi>o</mi><mi>m</mi><mi>p</mi><mi>o</mi><mi>n</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>s</mi><mi>/</mi><mi>A</mi><mi>p</mi><mi>p</mi><mi>.</mi><mi>v</mi><mi>u</mi><mi>e</mi></mrow><annotation>resources/js/components/App.vue</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">reso</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">rces</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">co</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">pp</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">vu</span><span class=\"mord mathnormal\">e</span></span></span></span></li>\n</ul>\n<pre><code class=\"language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">template</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">router-link</span> <span class=\"hljs-attr\">to</span> = <span class=\"hljs-string\">\"/\"</span>></span> Home <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">router-link</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">router-link</span> <span class=\"hljs-attr\">to</span> = <span class=\"hljs-string\">\"/tasks\"</span>></span> Tasks <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">router-link</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">router-view</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">router-view</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">template</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">scoped</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">style</span>></span>\n</code></pre>\n<p>We can also alter our simple Home component too.</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>r</mi><mi>e</mi><mi>s</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>c</mi><mi>e</mi><mi>/</mi><mi>j</mi><mi>s</mi><mi>/</mi><mi>c</mi><mi>o</mi><mi>m</mi><mi>p</mi><mi>o</mi><mi>n</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>s</mi><mi>/</mi><mi>H</mi><mi>o</mi><mi>m</mi><mi>e</mi><mi>.</mi><mi>v</mi><mi>u</mi><mi>e</mi></mrow><annotation>resource/js/components/Home.vue</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">reso</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">rce</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">co</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">Ho</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">e</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">vu</span><span class=\"mord mathnormal\">e</span></span></span></span></li>\n</ul>\n<pre><code class=\"language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">template</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span> Home Page <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span> This project demonstrates my skills in Vue.js and Laravel. <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">template</span>></span>\n</code></pre>\n<p>Afterwards, let's focus on building the Tasks component.</p>\n<ul>\n<li>This one is a bit more difficult and requires knowledge in Vue3.</li>\n<li>I'll start by building the script.</li>\n</ul>\n<pre><code class=\"language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">template</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">template</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">setup</span>></span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> { ref, onMounted, computed } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n<span class=\"hljs-keyword\">import</span> axios <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'axios'</span>\n\n<span class=\"hljs-keyword\">const</span> tasks = <span class=\"hljs-title function_\">ref</span>([])\n<span class=\"hljs-keyword\">const</span> forms = <span class=\"hljs-title function_\">ref</span>({\n    <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">''</span>,\n    <span class=\"hljs-attr\">protein</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">carbs</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">fat</span>: <span class=\"hljs-number\">0</span>\n})\n<span class=\"hljs-keyword\">const</span> isEditing = <span class=\"hljs-title function_\">ref</span>(<span class=\"hljs-literal\">false</span>)\n<span class=\"hljs-keyword\">const</span> editingId = <span class=\"hljs-title function_\">ref</span>(<span class=\"hljs-literal\">null</span>)\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">scoped</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">style</span>></span>\n</code></pre>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>r</mi><mi>e</mi><mi>f</mi></mrow><annotation>ref</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">re</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> is used to allow data values to be reactive.</p>\n<ul>\n<li>You initialize the variables.</li>\n</ul>\n<p>The computed property contains all computed properties that are declared on the Vue instance.</p>\n<ul>\n<li>Properties are read-only.\n<ul>\n<li>Can define a computed property as an object with both a get and set function.</li>\n</ul>\n</li>\n</ul>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>o</mi><mi>n</mi><mi>M</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>d</mi></mrow><annotation>onMounted</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">d</span></span></span></span> is a lifecycle hook that executes a callback function after a component has been mounted to the DOM.</p>\n<ul>\n<li>Component's template has been rendered and inserted into the parent's DOM.\n<ul>\n<li>You can interact with the DOM.</li>\n<li>Perform side effects.</li>\n<li>Limit DOM-related code to the client.</li>\n</ul>\n</li>\n</ul>\n<p>Let's move on to the view logic for front-end interactions to the controller</p>\n<ul>\n<li>Using Axios.</li>\n</ul>\n<pre><code class=\"language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">template</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">template</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">setup</span>></span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> { ref, onMounted, computed } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n<span class=\"hljs-keyword\">import</span> axios <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'axios'</span>\n\n<span class=\"hljs-keyword\">const</span> tasks = <span class=\"hljs-title function_\">ref</span>([])\n<span class=\"hljs-keyword\">const</span> forms = <span class=\"hljs-title function_\">ref</span>({\n    <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">''</span>,\n    <span class=\"hljs-attr\">protein</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">carbs</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">fat</span>: <span class=\"hljs-number\">0</span>\n})\n<span class=\"hljs-keyword\">const</span> isEditing = <span class=\"hljs-title function_\">ref</span>(<span class=\"hljs-literal\">false</span>)\n<span class=\"hljs-keyword\">const</span> editingId = <span class=\"hljs-title function_\">ref</span>(<span class=\"hljs-literal\">null</span>)\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">fetchTasks</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\"></span>) => {\n    <span class=\"hljs-keyword\">try</span> {\n        <span class=\"hljs-keyword\">const</span> res = <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'/api/tasks'</span>)\n        tasks.<span class=\"hljs-property\">value</span> = res.<span class=\"hljs-property\">data</span>\n    } <span class=\"hljs-keyword\">catch</span> (err) {\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'Fetch failed'</span>, err)\n    }\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">getTaskById</span> = <span class=\"hljs-keyword\">async</span>(<span class=\"hljs-params\">id</span>) => {\n    <span class=\"hljs-keyword\">try</span> {\n        <span class=\"hljs-keyword\">const</span> res = <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">`/api/tasks/<span class=\"hljs-subst\">${id}</span>`</span>)\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'Single task:'</span>, res.<span class=\"hljs-property\">data</span>)\n        <span class=\"hljs-keyword\">return</span> res.<span class=\"hljs-property\">data</span>\n    } <span class=\"hljs-keyword\">catch</span> (err) {\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'Get single task failed'</span>, err)\n    }\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">addTask</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\"></span>) => {\n    <span class=\"hljs-keyword\">try</span> {\n        <span class=\"hljs-comment\">// Editing form</span>\n        <span class=\"hljs-keyword\">if</span> (isEditing.<span class=\"hljs-property\">value</span>) {\n            <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">put</span>(<span class=\"hljs-string\">`/api/tasks/<span class=\"hljs-subst\">${editingId.value}</span>`</span>, form.<span class=\"hljs-property\">value</span>)\n        } \n        <span class=\"hljs-comment\">// Creating new form</span>\n        <span class=\"hljs-keyword\">else</span> {\n            <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">post</span>(<span class=\"hljs-string\">'/api/tasks'</span>, form.<span class=\"hljs-property\">value</span>)\n        }\n\n        <span class=\"hljs-comment\">// Reset Form</span>\n        form.<span class=\"hljs-property\">value</span> = {\n            <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">''</span>,\n            <span class=\"hljs-attr\">protein</span>: <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">carbs</span>: <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">fat</span>: <span class=\"hljs-number\">0</span>\n        }\n        isEditing.<span class=\"hljs-property\">value</span> = <span class=\"hljs-literal\">false</span>\n        editingId.<span class=\"hljs-property\">value</span> = <span class=\"hljs-literal\">null</span>\n\n        <span class=\"hljs-comment\">// Reload tasks</span>\n        <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetchTasks</span>()\n    } <span class=\"hljs-keyword\">catch</span> (err) {\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'Submit Failed'</span>, err)\n    }\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">editTask</span> = (<span class=\"hljs-params\">task</span>) => {\n    isEditing.<span class=\"hljs-property\">value</span> = <span class=\"hljs-literal\">true</span>\n    editingId.<span class=\"hljs-property\">value</span> = task.<span class=\"hljs-property\">id</span>\n    form.<span class=\"hljs-property\">value</span> = {\n        <span class=\"hljs-attr\">title</span>: task.<span class=\"hljs-property\">title</span>,\n        <span class=\"hljs-attr\">protein</span>: task.<span class=\"hljs-property\">protein</span>,\n        <span class=\"hljs-attr\">carbs</span>: task.<span class=\"hljs-property\">carbs</span>,\n        <span class=\"hljs-attr\">fat</span>: task.<span class=\"hljs-property\">fat</span>\n    }\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">deleteTask</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\">id</span>) => {\n    <span class=\"hljs-keyword\">try</span> {\n        <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">delete</span>(<span class=\"hljs-string\">`/api/tasks/<span class=\"hljs-subst\">${id}</span>`</span>)\n        \n        <span class=\"hljs-comment\">// Reload tasks</span>\n        <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetchTasks</span>()\n    } <span class=\"hljs-keyword\">catch</span> (err) {\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">'Delete failed'</span>, err)\n    }\n}\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">scoped</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">style</span>></span>\n</code></pre>\n<p>Axios works by sending HTTP requests to the server.</p>\n<ul>\n<li>Remember the controller?</li>\n<li>GET, POST, PUT, DELETE.</li>\n</ul>\n<p>What does async and await do?</p>\n<ul>\n<li>Async indicates that the function will handle asynchronous operations and return a Promise.\n<ul>\n<li>A Promise is an object that represnets the eventual completion or failure of an asynchronous operation.</li>\n</ul>\n</li>\n<li>Await is used to pause the execution of a function until a Promise is resolved or rejected.\n<ul>\n<li>The asynchronous operation must complete.</li>\n</ul>\n</li>\n</ul>\n<p>What are try-catch blocks?</p>\n<ul>\n<li>Provides a mechanism for handling errors.\n<ul>\n<li>The catch block gives us information about the error.</li>\n</ul>\n</li>\n</ul>\n<p>Finally, let's add the last part of the code.</p>\n<ul>\n<li>The computed function will return the unwritten tasks and the calculates macros.</li>\n</ul>\n<pre><code class=\"language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">template</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">template</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">setup</span>></span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> { ref, onMounted, computed } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n<span class=\"hljs-keyword\">import</span> axios <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'axios'</span>\n\n<span class=\"hljs-keyword\">const</span> tasks = <span class=\"hljs-title function_\">ref</span>([])\n<span class=\"hljs-keyword\">const</span> forms = <span class=\"hljs-title function_\">ref</span>({\n    <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">''</span>,\n    <span class=\"hljs-attr\">protein</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">carbs</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">fat</span>: <span class=\"hljs-number\">0</span>\n})\n<span class=\"hljs-keyword\">const</span> isEditing = <span class=\"hljs-title function_\">ref</span>(<span class=\"hljs-literal\">false</span>)\n<span class=\"hljs-keyword\">const</span> editingId = <span class=\"hljs-title function_\">ref</span>(<span class=\"hljs-literal\">null</span>)\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">fetchTasks</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\"></span>) => {\n    <span class=\"hljs-keyword\">try</span> {\n        <span class=\"hljs-keyword\">const</span> res = <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'/api/tasks'</span>)\n        tasks.<span class=\"hljs-property\">value</span> = res.<span class=\"hljs-property\">data</span>\n    } <span class=\"hljs-keyword\">catch</span> (err) {\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'Fetch failed'</span>, err)\n    }\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">getTaskById</span> = <span class=\"hljs-keyword\">async</span>(<span class=\"hljs-params\">id</span>) => {\n    <span class=\"hljs-keyword\">try</span> {\n        <span class=\"hljs-keyword\">const</span> res = <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">`/api/tasks/<span class=\"hljs-subst\">${id}</span>`</span>)\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'Single task:'</span>, res.<span class=\"hljs-property\">data</span>)\n        <span class=\"hljs-keyword\">return</span> res.<span class=\"hljs-property\">data</span>\n    } <span class=\"hljs-keyword\">catch</span> (err) {\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'Get single task failed'</span>, err)\n    }\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">addTask</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\"></span>) => {\n    <span class=\"hljs-keyword\">try</span> {\n        <span class=\"hljs-comment\">// Editing form</span>\n        <span class=\"hljs-keyword\">if</span> (isEditing.<span class=\"hljs-property\">value</span>) {\n            <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">put</span>(<span class=\"hljs-string\">`/api/tasks/<span class=\"hljs-subst\">${editingId.value}</span>`</span>, form.<span class=\"hljs-property\">value</span>)\n        } \n        <span class=\"hljs-comment\">// Creating new form</span>\n        <span class=\"hljs-keyword\">else</span> {\n            <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">post</span>(<span class=\"hljs-string\">'/api/tasks'</span>, form.<span class=\"hljs-property\">value</span>)\n        }\n\n        <span class=\"hljs-comment\">// Reset Form</span>\n        form.<span class=\"hljs-property\">value</span> = {\n            <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">''</span>,\n            <span class=\"hljs-attr\">protein</span>: <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">carbs</span>: <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">fat</span>: <span class=\"hljs-number\">0</span>\n        }\n        isEditing.<span class=\"hljs-property\">value</span> = <span class=\"hljs-literal\">false</span>\n        editingId.<span class=\"hljs-property\">value</span> = <span class=\"hljs-literal\">null</span>\n\n        <span class=\"hljs-comment\">// Reload tasks</span>\n        <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetchTasks</span>()\n    } <span class=\"hljs-keyword\">catch</span> (err) {\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'Submit Failed'</span>, err)\n    }\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">editTask</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\">id</span>) => {\n  <span class=\"hljs-keyword\">try</span> {\n    <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">put</span>(<span class=\"hljs-string\">`/api/tasks/<span class=\"hljs-subst\">${id}</span>`</span>, form.<span class=\"hljs-property\">value</span>)\n\n    <span class=\"hljs-comment\">// Reset form</span>\n    form.<span class=\"hljs-property\">value</span> = {\n      <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">''</span>,\n      <span class=\"hljs-attr\">protein</span>: <span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">carbs</span>: <span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">fat</span>: <span class=\"hljs-number\">0</span>\n    }\n\n    <span class=\"hljs-comment\">// Reload Tasks</span>\n    <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetchTasks</span>()\n  } <span class=\"hljs-keyword\">catch</span> (err) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">'Update task failed'</span>, err)\n  }\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">deleteTask</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\">id</span>) => {\n    <span class=\"hljs-keyword\">try</span> {\n        <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">delete</span>(<span class=\"hljs-string\">`/api/tasks/<span class=\"hljs-subst\">${id}</span>`</span>)\n        \n        <span class=\"hljs-comment\">// Reload tasks</span>\n        <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetchTasks</span>()\n    } <span class=\"hljs-keyword\">catch</span> (err) {\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">'Delete failed'</span>, err)\n    }\n}\n\n<span class=\"hljs-keyword\">const</span> calculateMacros = <span class=\"hljs-title function_\">computed</span>(<span class=\"hljs-function\">() =></span> {\n    <span class=\"hljs-keyword\">return</span> tasks.<span class=\"hljs-property\">value</span>.<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">task</span> =></span>\n        <span class=\"hljs-keyword\">const</span> total = task.<span class=\"hljs-property\">protein</span> + task.<span class=\"hljs-property\">carbs</span> + task.<span class=\"hljs-property\">fat</span>\n        <span class=\"hljs-keyword\">const</span> proteinCount = total * <span class=\"hljs-number\">0.45</span>\n        <span class=\"hljs-keyword\">const</span> carbCount = total * <span class=\"hljs-number\">0.35</span>\n        cont fatCount = total * <span class=\"hljs-number\">0.20</span>\n\n        <span class=\"hljs-keyword\">return</span> {\n            ...task,\n            <span class=\"hljs-attr\">macros</span>: {\n                <span class=\"hljs-attr\">protein</span>: proteinCount.<span class=\"hljs-title function_\">toFixed</span>(<span class=\"hljs-number\">1</span>),\n                <span class=\"hljs-attr\">carbs</span>: carbCount.<span class=\"hljs-title function_\">toFixed</span>(<span class=\"hljs-number\">1</span>),\n                <span class=\"hljs-attr\">fat</span>: fatCount.<span class=\"hljs-title function_\">toFixed</span>(<span class=\"hljs-number\">1</span>)\n            }\n        }\n    )\n})\n\n<span class=\"hljs-title function_\">onMounted</span>(<span class=\"hljs-function\">() =></span> {\n    <span class=\"hljs-title function_\">fetchTasks</span>()\n})\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">scoped</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">style</span>></span>\n</code></pre>\n<p>What does the map function do?</p>\n<ul>\n<li>It creates a new array without modifying the original array.\n<ul>\n<li>Contains the elements of the original array.</li>\n</ul>\n</li>\n</ul>\n<p>Essentially, calculatedMacros returns the new array with unaffected values.</p>\n<ul>\n<li>It also returns an object macros:\n<ul>\n<li>protein.</li>\n<li>carbs.</li>\n<li>fat.</li>\n</ul>\n</li>\n</ul>\n<p>With the script set up, we can now edit the template.</p>\n<pre><code class=\"language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">template</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span> Laravel 12 + Vue 3 Tasks <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n\n        <span class=\"hljs-comment\">&#x3C;!-- Form to submit task--></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">v-on:submit.prevent</span>=<span class=\"hljs-string\">\"addTask\"</span>></span>\n            <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>\n                <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"form.title\"</span>></span>\n            <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n            <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>\n                <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">v-model.number</span>=<span class=\"hljs-string\">\"form.protein\"</span>></span>\n            <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n            <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>\n                <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">v-model.number</span>=<span class=\"hljs-string\">\"form.carbs\"</span>></span>\n            <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n            <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>\n                <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">v-model.number</span>=<span class=\"hljs-string\">\"form.fat\"</span>></span>\n            <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n            <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"submit\"</span>></span> Add Macros <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">button</span>></span>\n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">form</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">template</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">setup</span>></span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> { ref, onMounted, computed } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n<span class=\"hljs-keyword\">import</span> axios <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'axios'</span>\n\n<span class=\"hljs-keyword\">const</span> tasks = <span class=\"hljs-title function_\">ref</span>([])\n<span class=\"hljs-keyword\">const</span> forms = <span class=\"hljs-title function_\">ref</span>({\n    <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">''</span>,\n    <span class=\"hljs-attr\">protein</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">carbs</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">fat</span>: <span class=\"hljs-number\">0</span>\n})\n<span class=\"hljs-keyword\">const</span> isEditing = <span class=\"hljs-title function_\">ref</span>(<span class=\"hljs-literal\">false</span>)\n<span class=\"hljs-keyword\">const</span> editingId = <span class=\"hljs-title function_\">ref</span>(<span class=\"hljs-literal\">null</span>)\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">fetchTasks</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\"></span>) => {\n    <span class=\"hljs-keyword\">try</span> {\n        <span class=\"hljs-keyword\">const</span> res = <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'/api/tasks'</span>)\n        tasks.<span class=\"hljs-property\">value</span> = res.<span class=\"hljs-property\">data</span>\n    } <span class=\"hljs-keyword\">catch</span> (err) {\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'Fetch failed'</span>, err)\n    }\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">getTaskById</span> = <span class=\"hljs-keyword\">async</span>(<span class=\"hljs-params\">id</span>) => {\n    <span class=\"hljs-keyword\">try</span> {\n        <span class=\"hljs-keyword\">const</span> res = <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">`/api/tasks/<span class=\"hljs-subst\">${id}</span>`</span>)\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'Single task:'</span>, res.<span class=\"hljs-property\">data</span>)\n        <span class=\"hljs-keyword\">return</span> res.<span class=\"hljs-property\">data</span>\n    } <span class=\"hljs-keyword\">catch</span> (err) {\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'Get single task failed'</span>, err)\n    }\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">addTask</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\"></span>) => {\n    <span class=\"hljs-keyword\">try</span> {\n        <span class=\"hljs-comment\">// Editing form</span>\n        <span class=\"hljs-keyword\">if</span> (isEditing.<span class=\"hljs-property\">value</span>) {\n            <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">put</span>(<span class=\"hljs-string\">`/api/tasks/<span class=\"hljs-subst\">${editingId.value}</span>`</span>, form.<span class=\"hljs-property\">value</span>)\n        } \n        <span class=\"hljs-comment\">// Creating new form</span>\n        <span class=\"hljs-keyword\">else</span> {\n            <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">post</span>(<span class=\"hljs-string\">'/api/tasks'</span>, form.<span class=\"hljs-property\">value</span>)\n        }\n\n        <span class=\"hljs-comment\">// Reset Form</span>\n        form.<span class=\"hljs-property\">value</span> = {\n            <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">''</span>,\n            <span class=\"hljs-attr\">protein</span>: <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">carbs</span>: <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">fat</span>: <span class=\"hljs-number\">0</span>\n        }\n        isEditing.<span class=\"hljs-property\">value</span> = <span class=\"hljs-literal\">false</span>\n        editingId.<span class=\"hljs-property\">value</span> = <span class=\"hljs-literal\">null</span>\n\n        <span class=\"hljs-comment\">// Reload tasks</span>\n        <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetchTasks</span>()\n    } <span class=\"hljs-keyword\">catch</span> (err) {\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'Submit Failed'</span>, err)\n    }\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">editTask</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\">id</span>) => {\n  <span class=\"hljs-keyword\">try</span> {\n    <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">put</span>(<span class=\"hljs-string\">`/api/tasks/<span class=\"hljs-subst\">${id}</span>`</span>, form.<span class=\"hljs-property\">value</span>)\n\n    <span class=\"hljs-comment\">// Reset form</span>\n    form.<span class=\"hljs-property\">value</span> = {\n      <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">''</span>,\n      <span class=\"hljs-attr\">protein</span>: <span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">carbs</span>: <span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">fat</span>: <span class=\"hljs-number\">0</span>\n    }\n\n    <span class=\"hljs-comment\">// Reload Tasks</span>\n    <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetchTasks</span>()\n  } <span class=\"hljs-keyword\">catch</span> (err) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">'Update task failed'</span>, err)\n  }\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">deleteTask</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\">id</span>) => {\n    <span class=\"hljs-keyword\">try</span> {\n        <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">delete</span>(<span class=\"hljs-string\">`/api/tasks/<span class=\"hljs-subst\">${id}</span>`</span>)\n        \n        <span class=\"hljs-comment\">// Reload tasks</span>\n        <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetchTasks</span>()\n    } <span class=\"hljs-keyword\">catch</span> (err) {\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">'Delete failed'</span>, err)\n    }\n}\n\n<span class=\"hljs-keyword\">const</span> calculateMacros = <span class=\"hljs-title function_\">computed</span>(<span class=\"hljs-function\">() =></span> {\n    <span class=\"hljs-keyword\">return</span> tasks.<span class=\"hljs-property\">value</span>.<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">task</span> =></span>\n        <span class=\"hljs-keyword\">const</span> total = task.<span class=\"hljs-property\">protein</span> + task.<span class=\"hljs-property\">carbs</span> + task.<span class=\"hljs-property\">fat</span>\n        <span class=\"hljs-keyword\">const</span> proteinCount = total * <span class=\"hljs-number\">0.45</span>\n        <span class=\"hljs-keyword\">const</span> carbCount = total * <span class=\"hljs-number\">0.35</span>\n        cont fatCount = total * <span class=\"hljs-number\">0.20</span>\n\n        <span class=\"hljs-keyword\">return</span> {\n            ...task,\n            <span class=\"hljs-attr\">macros</span>: {\n                <span class=\"hljs-attr\">protein</span>: proteinCount.<span class=\"hljs-title function_\">toFixed</span>(<span class=\"hljs-number\">1</span>),\n                <span class=\"hljs-attr\">carbs</span>: carbCount.<span class=\"hljs-title function_\">toFixed</span>(<span class=\"hljs-number\">1</span>),\n                <span class=\"hljs-attr\">fat</span>: fatCount.<span class=\"hljs-title function_\">toFixed</span>(<span class=\"hljs-number\">1</span>)\n            }\n        }\n    )\n})\n\n<span class=\"hljs-title function_\">onMounted</span>(<span class=\"hljs-function\">() =></span> {\n    <span class=\"hljs-title function_\">fetchTasks</span>()\n})\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">scoped</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">style</span>></span>\n</code></pre>\n<p>I created a basic form to add a task.</p>\n<p>What is v-model?</p>\n<ul>\n<li>Two-way binding.\n<ul>\n<li>You interact with the input, the input and the Vue instance changes.</li>\n</ul>\n</li>\n<li>v-model.number allows us to input only numbers.</li>\n</ul>\n<p>What is v-on:submit?</p>\n<ul>\n<li>Calls the function in \"\".\n<ul>\n<li>But prevents the page from refreshing with .prevent</li>\n</ul>\n</li>\n</ul>\n<p>Let's move on to creating the table for fetching the task entries.</p>\n<pre><code class=\"language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">template</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span> Laravel 12 + Vue 3 Tasks <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n\n        <span class=\"hljs-comment\">&#x3C;!-- Form to submit task--></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">v-on:submit.prevent</span>=<span class=\"hljs-string\">\"addTask\"</span>></span>\n            <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>\n                <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"form.title\"</span>></span>\n            <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n            <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>\n                <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">v-model.number</span>=<span class=\"hljs-string\">\"form.protein\"</span>></span>\n            <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n            <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>\n                <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">v-model.number</span>=<span class=\"hljs-string\">\"form.carbs\"</span>></span>\n            <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n            <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>\n                <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">v-model.number</span>=<span class=\"hljs-string\">\"form.fat\"</span>></span>\n            <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n            <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"submit\"</span>></span> Add Macros <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">button</span>></span>\n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">form</span>></span>\n\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">v-for</span>=<span class=\"hljs-string\">\"task in calculateMacros\"</span> <span class=\"hljs-attr\">:key</span>=<span class=\"hljs-string\">\"task.id\"</span>></span>\n            <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">table</span>></span>\n                <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">thead</span>></span>\n                    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">tr</span>></span>\n                        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">th</span>></span> Name <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">th</span>></span>\n                        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">th</span>></span> Protein <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">th</span>></span>\n                        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">th</span>></span> Carbs <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">th</span>></span>\n                        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">th</span>></span> Fats <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">th</span>></span>\n                    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">tr</span>></span>\n                <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">thead</span>></span>\n                <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">tbody</span>></span>\n                    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">tr</span>></span>\n                        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">td</span>></span> {{ task.title }} <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">td</span>></span>\n                        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">td</span>></span> {{ task.protein }} <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">td</span>></span>\n                        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">td</span>></span> {{ task.carbs }} <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">td</span>></span>\n                        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">td</span>></span> {{ task.fat }} <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">td</span>></span>\n                    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">tr</span>></span>\n                    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">tr</span>></span>\n                        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">td</span>></span> Ideal: <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">td</span>></span>\n                        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">td</span>></span> {{ task.macros.protein }} <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">td</span>></span>\n                        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">td</span>></span> {{ task.macros.carbs }} <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">td</span>></span>\n                        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">td</span>></span> {{ task.macros.fat }} <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">td</span>></span>\n                    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">tr</span>></span>\n                <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">tbody</span>></span>\n            <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">table</span>></span>\n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">template</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">setup</span>></span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> { ref, onMounted, computed } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n<span class=\"hljs-keyword\">import</span> axios <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'axios'</span>\n\n<span class=\"hljs-keyword\">const</span> tasks = <span class=\"hljs-title function_\">ref</span>([])\n<span class=\"hljs-keyword\">const</span> forms = <span class=\"hljs-title function_\">ref</span>({\n    <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">''</span>,\n    <span class=\"hljs-attr\">protein</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">carbs</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">fat</span>: <span class=\"hljs-number\">0</span>\n})\n<span class=\"hljs-keyword\">const</span> isEditing = <span class=\"hljs-title function_\">ref</span>(<span class=\"hljs-literal\">false</span>)\n<span class=\"hljs-keyword\">const</span> editingId = <span class=\"hljs-title function_\">ref</span>(<span class=\"hljs-literal\">null</span>)\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">fetchTasks</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\"></span>) => {\n    <span class=\"hljs-keyword\">try</span> {\n        <span class=\"hljs-keyword\">const</span> res = <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'/api/tasks'</span>)\n        tasks.<span class=\"hljs-property\">value</span> = res.<span class=\"hljs-property\">data</span>\n    } <span class=\"hljs-keyword\">catch</span> (err) {\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'Fetch failed'</span>, err)\n    }\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">getTaskById</span> = <span class=\"hljs-keyword\">async</span>(<span class=\"hljs-params\">id</span>) => {\n    <span class=\"hljs-keyword\">try</span> {\n        <span class=\"hljs-keyword\">const</span> res = <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">`/api/tasks/<span class=\"hljs-subst\">${id}</span>`</span>)\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'Single task:'</span>, res.<span class=\"hljs-property\">data</span>)\n        <span class=\"hljs-keyword\">return</span> res.<span class=\"hljs-property\">data</span>\n    } <span class=\"hljs-keyword\">catch</span> (err) {\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'Get single task failed'</span>, err)\n    }\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">addTask</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\"></span>) => {\n    <span class=\"hljs-keyword\">try</span> {\n        <span class=\"hljs-comment\">// Editing form</span>\n        <span class=\"hljs-keyword\">if</span> (isEditing.<span class=\"hljs-property\">value</span>) {\n            <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">put</span>(<span class=\"hljs-string\">`/api/tasks/<span class=\"hljs-subst\">${editingId.value}</span>`</span>, form.<span class=\"hljs-property\">value</span>)\n        } \n        <span class=\"hljs-comment\">// Creating new form</span>\n        <span class=\"hljs-keyword\">else</span> {\n            <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">post</span>(<span class=\"hljs-string\">'/api/tasks'</span>, form.<span class=\"hljs-property\">value</span>)\n        }\n\n        <span class=\"hljs-comment\">// Reset Form</span>\n        form.<span class=\"hljs-property\">value</span> = {\n            <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">''</span>,\n            <span class=\"hljs-attr\">protein</span>: <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">carbs</span>: <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">fat</span>: <span class=\"hljs-number\">0</span>\n        }\n        isEditing.<span class=\"hljs-property\">value</span> = <span class=\"hljs-literal\">false</span>\n        editingId.<span class=\"hljs-property\">value</span> = <span class=\"hljs-literal\">null</span>\n\n        <span class=\"hljs-comment\">// Reload tasks</span>\n        <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetchTasks</span>()\n    } <span class=\"hljs-keyword\">catch</span> (err) {\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'Submit Failed'</span>, err)\n    }\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">editTask</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\">id</span>) => {\n  <span class=\"hljs-keyword\">try</span> {\n    <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">put</span>(<span class=\"hljs-string\">`/api/tasks/<span class=\"hljs-subst\">${id}</span>`</span>, form.<span class=\"hljs-property\">value</span>)\n\n    <span class=\"hljs-comment\">// Reset form</span>\n    form.<span class=\"hljs-property\">value</span> = {\n      <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">''</span>,\n      <span class=\"hljs-attr\">protein</span>: <span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">carbs</span>: <span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">fat</span>: <span class=\"hljs-number\">0</span>\n    }\n\n    <span class=\"hljs-comment\">// Reload Tasks</span>\n    <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetchTasks</span>()\n  } <span class=\"hljs-keyword\">catch</span> (err) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">'Update task failed'</span>, err)\n  }\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">deleteTask</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\">id</span>) => {\n    <span class=\"hljs-keyword\">try</span> {\n        <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">delete</span>(<span class=\"hljs-string\">`/api/tasks/<span class=\"hljs-subst\">${id}</span>`</span>)\n        \n        <span class=\"hljs-comment\">// Reload tasks</span>\n        <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetchTasks</span>()\n    } <span class=\"hljs-keyword\">catch</span> (err) {\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">'Delete failed'</span>, err)\n    }\n}\n\n<span class=\"hljs-keyword\">const</span> calculateMacros = <span class=\"hljs-title function_\">computed</span>(<span class=\"hljs-function\">() =></span> {\n    <span class=\"hljs-keyword\">return</span> tasks.<span class=\"hljs-property\">value</span>.<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">task</span> =></span>\n        <span class=\"hljs-keyword\">const</span> total = task.<span class=\"hljs-property\">protein</span> + task.<span class=\"hljs-property\">carbs</span> + task.<span class=\"hljs-property\">fat</span>\n        <span class=\"hljs-keyword\">const</span> proteinCount = total * <span class=\"hljs-number\">0.45</span>\n        <span class=\"hljs-keyword\">const</span> carbCount = total * <span class=\"hljs-number\">0.35</span>\n        cont fatCount = total * <span class=\"hljs-number\">0.20</span>\n\n        <span class=\"hljs-keyword\">return</span> {\n            ...task,\n            <span class=\"hljs-attr\">macros</span>: {\n                <span class=\"hljs-attr\">protein</span>: proteinCount.<span class=\"hljs-title function_\">toFixed</span>(<span class=\"hljs-number\">1</span>),\n                <span class=\"hljs-attr\">carbs</span>: carbCount.<span class=\"hljs-title function_\">toFixed</span>(<span class=\"hljs-number\">1</span>),\n                <span class=\"hljs-attr\">fat</span>: fatCount.<span class=\"hljs-title function_\">toFixed</span>(<span class=\"hljs-number\">1</span>)\n            }\n        }\n    )\n})\n\n<span class=\"hljs-title function_\">onMounted</span>(<span class=\"hljs-function\">() =></span> {\n    <span class=\"hljs-title function_\">fetchTasks</span>()\n})\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">scoped</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">style</span>></span>\n</code></pre>\n<p>We have now populated the tables with the fetched data.</p>\n<p>What is v-for?</p>\n<ul>\n<li>It iterates through each row and we can use the entries in the rows to populate the tables.</li>\n</ul>\n<p>What is :key?</p>\n<ul>\n<li>The key uniquely identifies each element created in v-for.</li>\n</ul>\n<p>Now, let's finalize the project by adding buttons for updating and deleting entries.</p>\n<pre><code class=\"language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">template</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span> Laravel 12 + Vue 3 Tasks <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n\n        <span class=\"hljs-comment\">&#x3C;!-- Form to submit task--></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">v-on:submit.prevent</span>=<span class=\"hljs-string\">\"addTask\"</span>></span>\n            <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>\n                <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"form.title\"</span>></span>\n            <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n            <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>\n                <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">v-model.number</span>=<span class=\"hljs-string\">\"form.protein\"</span>></span>\n            <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n            <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>\n                <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">v-model.number</span>=<span class=\"hljs-string\">\"form.carbs\"</span>></span>\n            <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n            <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>\n                <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">v-model.number</span>=<span class=\"hljs-string\">\"form.fat\"</span>></span>\n            <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n            <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"submit\"</span>></span> Add Macros <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">button</span>></span>\n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">form</span>></span>\n\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">v-for</span>=<span class=\"hljs-string\">\"task in calculateMacros\"</span> <span class=\"hljs-attr\">:key</span>=<span class=\"hljs-string\">\"task.id\"</span>></span>\n            <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">table</span>></span>\n                <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">thead</span>></span>\n                    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">tr</span>></span>\n                        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">th</span>></span> Name <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">th</span>></span>\n                        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">th</span>></span> Protein <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">th</span>></span>\n                        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">th</span>></span> Carbs <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">th</span>></span>\n                        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">th</span>></span> Fats <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">th</span>></span>\n                    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">tr</span>></span>\n                <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">thead</span>></span>\n                <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">tbody</span>></span>\n                    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">tr</span>></span>\n                        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">td</span>></span> {{ task.title }} <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">td</span>></span>\n                        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">td</span>></span> {{ task.protein }} <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">td</span>></span>\n                        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">td</span>></span> {{ task.carbs }} <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">td</span>></span>\n                        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">td</span>></span> {{ task.fat }} <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">td</span>></span>\n                    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">tr</span>></span>\n                    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">tr</span>></span>\n                        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">td</span>></span> Ideal: <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">td</span>></span>\n                        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">td</span>></span> {{ task.macros.protein }} <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">td</span>></span>\n                        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">td</span>></span> {{ task.macros.carbs }} <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">td</span>></span>\n                        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">td</span>></span> {{ task.macros.fat }} <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">td</span>></span>\n                    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">tr</span>></span>\n                <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">tbody</span>></span>\n            <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">table</span>></span>\n            <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">v-on:click</span>=<span class=\"hljs-string\">\"deleteTask(task.id)\"</span>></span> Delete <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">button</span>></span>\n            <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">v-on:click</span>=<span class=\"hljs-string\">\"editTask(task.id)\"</span>></span> Edit <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">button</span>></span>\n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">template</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">setup</span>></span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> { ref, onMounted, computed } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n<span class=\"hljs-keyword\">import</span> axios <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'axios'</span>\n\n<span class=\"hljs-keyword\">const</span> tasks = <span class=\"hljs-title function_\">ref</span>([])\n<span class=\"hljs-keyword\">const</span> forms = <span class=\"hljs-title function_\">ref</span>({\n    <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">''</span>,\n    <span class=\"hljs-attr\">protein</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">carbs</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">fat</span>: <span class=\"hljs-number\">0</span>\n})\n<span class=\"hljs-keyword\">const</span> isEditing = <span class=\"hljs-title function_\">ref</span>(<span class=\"hljs-literal\">false</span>)\n<span class=\"hljs-keyword\">const</span> editingId = <span class=\"hljs-title function_\">ref</span>(<span class=\"hljs-literal\">null</span>)\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">fetchTasks</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\"></span>) => {\n    <span class=\"hljs-keyword\">try</span> {\n        <span class=\"hljs-keyword\">const</span> res = <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">'/api/tasks'</span>)\n        tasks.<span class=\"hljs-property\">value</span> = res.<span class=\"hljs-property\">data</span>\n    } <span class=\"hljs-keyword\">catch</span> (err) {\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'Fetch failed'</span>, err)\n    }\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">getTaskById</span> = <span class=\"hljs-keyword\">async</span>(<span class=\"hljs-params\">id</span>) => {\n    <span class=\"hljs-keyword\">try</span> {\n        <span class=\"hljs-keyword\">const</span> res = <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">`/api/tasks/<span class=\"hljs-subst\">${id}</span>`</span>)\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'Single task:'</span>, res.<span class=\"hljs-property\">data</span>)\n        <span class=\"hljs-keyword\">return</span> res.<span class=\"hljs-property\">data</span>\n    } <span class=\"hljs-keyword\">catch</span> (err) {\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'Get single task failed'</span>, err)\n    }\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">addTask</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\"></span>) => {\n    <span class=\"hljs-keyword\">try</span> {\n        <span class=\"hljs-comment\">// Editing form</span>\n        <span class=\"hljs-keyword\">if</span> (isEditing.<span class=\"hljs-property\">value</span>) {\n            <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">put</span>(<span class=\"hljs-string\">`/api/tasks/<span class=\"hljs-subst\">${editingId.value}</span>`</span>, form.<span class=\"hljs-property\">value</span>)\n        } \n        <span class=\"hljs-comment\">// Creating new form</span>\n        <span class=\"hljs-keyword\">else</span> {\n            <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">post</span>(<span class=\"hljs-string\">'/api/tasks'</span>, form.<span class=\"hljs-property\">value</span>)\n        }\n\n        <span class=\"hljs-comment\">// Reset Form</span>\n        form.<span class=\"hljs-property\">value</span> = {\n            <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">''</span>,\n            <span class=\"hljs-attr\">protein</span>: <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">carbs</span>: <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">fat</span>: <span class=\"hljs-number\">0</span>\n        }\n        isEditing.<span class=\"hljs-property\">value</span> = <span class=\"hljs-literal\">false</span>\n        editingId.<span class=\"hljs-property\">value</span> = <span class=\"hljs-literal\">null</span>\n\n        <span class=\"hljs-comment\">// Reload tasks</span>\n        <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetchTasks</span>()\n    } <span class=\"hljs-keyword\">catch</span> (err) {\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'Submit Failed'</span>, err)\n    }\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">editTask</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\">id</span>) => {\n  <span class=\"hljs-keyword\">try</span> {\n    <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">put</span>(<span class=\"hljs-string\">`/api/tasks/<span class=\"hljs-subst\">${id}</span>`</span>, form.<span class=\"hljs-property\">value</span>)\n\n    <span class=\"hljs-comment\">// Reset form</span>\n    form.<span class=\"hljs-property\">value</span> = {\n      <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">''</span>,\n      <span class=\"hljs-attr\">protein</span>: <span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">carbs</span>: <span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">fat</span>: <span class=\"hljs-number\">0</span>\n    }\n\n    <span class=\"hljs-comment\">// Reload Tasks</span>\n    <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetchTasks</span>()\n  } <span class=\"hljs-keyword\">catch</span> (err) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">'Update task failed'</span>, err)\n  }\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">deleteTask</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\">id</span>) => {\n    <span class=\"hljs-keyword\">try</span> {\n        <span class=\"hljs-keyword\">await</span> axios.<span class=\"hljs-title function_\">delete</span>(<span class=\"hljs-string\">`/api/tasks/<span class=\"hljs-subst\">${id}</span>`</span>)\n        \n        <span class=\"hljs-comment\">// Reload tasks</span>\n        <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetchTasks</span>()\n    } <span class=\"hljs-keyword\">catch</span> (err) {\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">'Delete failed'</span>, err)\n    }\n}\n\n<span class=\"hljs-keyword\">const</span> calculateMacros = <span class=\"hljs-title function_\">computed</span>(<span class=\"hljs-function\">() =></span> {\n    <span class=\"hljs-keyword\">return</span> tasks.<span class=\"hljs-property\">value</span>.<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">task</span> =></span>\n        <span class=\"hljs-keyword\">const</span> total = task.<span class=\"hljs-property\">protein</span> + task.<span class=\"hljs-property\">carbs</span> + task.<span class=\"hljs-property\">fat</span>\n        <span class=\"hljs-keyword\">const</span> proteinCount = total * <span class=\"hljs-number\">0.45</span>\n        <span class=\"hljs-keyword\">const</span> carbCount = total * <span class=\"hljs-number\">0.35</span>\n        cont fatCount = total * <span class=\"hljs-number\">0.20</span>\n\n        <span class=\"hljs-keyword\">return</span> {\n            ...task,\n            <span class=\"hljs-attr\">macros</span>: {\n                <span class=\"hljs-attr\">protein</span>: proteinCount.<span class=\"hljs-title function_\">toFixed</span>(<span class=\"hljs-number\">1</span>),\n                <span class=\"hljs-attr\">carbs</span>: carbCount.<span class=\"hljs-title function_\">toFixed</span>(<span class=\"hljs-number\">1</span>),\n                <span class=\"hljs-attr\">fat</span>: fatCount.<span class=\"hljs-title function_\">toFixed</span>(<span class=\"hljs-number\">1</span>)\n            }\n        }\n    )\n})\n\n<span class=\"hljs-title function_\">onMounted</span>(<span class=\"hljs-function\">() =></span> {\n    <span class=\"hljs-title function_\">fetchTasks</span>()\n})\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">scoped</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">style</span>></span>\n</code></pre>\n<p>What does v-on do?</p>\n<ul>\n<li>Handles events.\n<ul>\n<li>In this case, it is a click event.</li>\n<li>It called the deleteTask() and updateTask() functions when a click event occurs.</li>\n</ul>\n</li>\n</ul>",
  "title": "Vue3 and Laravel12 App",
  "date": "July 13, 2025",
  "category": "Vue3 and Laravel12",
  "categories": []
}