{
  "id": "arrays/longestconsecutivesequence",
  "contentHtml": "<h1>Longest Consecutive Sequence</h1>\n<p>You have an unsorted array nums and you must return the length of the longest consecutive sequence.</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mo>=</mo><mo>[</mo><mn>100</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>200</mn><mo>,</mo><mn>1</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>2</mn><mo>]</mo></mrow><annotation>nums = [100, 4, 200, 1, 3, 2]</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">s</span><span class=\"mspace\"></span><span class=\"mrel\">=</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mopen\">[</span><span class=\"mord\">100</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">4</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">200</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">2</span><span class=\"mclose\">]</span></span></span></span>\n<ul>\n<li>Longest Sequence: <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>1</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>4</mn></mrow><annotation>1, 2, 3, 4</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">4</span></span></span></span></li>\n<li>Output: <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>4</mn></mrow><annotation>4</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">4</span></span></span></span></li>\n</ul>\n</li>\n</ul>\n<h2>How to Solve?</h2>\n<p>To solve this in a linear runtime <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation>O(n)</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>, you can utilize a hash set. What exactly does this hash set do? You can check if the left neighbor of a number exists. If it does not, it is the start of an interval. You can iterate through the interval to see if there is a sequence that exists.</p>\n<h3>Hash Set Solution</h3>\n<p>Let's first assign a hash set to the set of nums.</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mo>=</mo><mo>[</mo><mn>100</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>200</mn><mo>,</mo><mn>1</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>2</mn><mo>]</mo></mrow><annotation>nums = [100, 4, 200, 1, 3, 2]</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">s</span><span class=\"mspace\"></span><span class=\"mrel\">=</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mopen\">[</span><span class=\"mord\">100</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">4</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">200</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">2</span><span class=\"mclose\">]</span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>h</mi><mi>a</mi><mi>s</mi><mi>h</mi><mi>S</mi><mi>e</mi><mi>t</mi><mo>=</mo><mo>{</mo><mn>100</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>200</mn><mo>,</mo><mn>1</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>2</mn><mo>}</mo></mrow><annotation>hashSet = \\{100, 4, 200, 1, 3, 2\\}</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">ha</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">S</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\"></span><span class=\"mrel\">=</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mopen\">{</span><span class=\"mord\">100</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">4</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">200</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">2</span><span class=\"mclose\">}</span></span></span></span>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>100</mn></mrow><annotation>100</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">100</span></span></span></span> does not have a left neighbor.\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>99</mn></mrow><annotation>99</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">99</span></span></span></span> does not exist in the set.</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>L</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi><mo>=</mo><mn>1</mn></mrow><annotation>Length = 1</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">g</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">h</span><span class=\"mspace\"></span><span class=\"mrel\">=</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">1</span></span></span></span></li>\n</ul>\n</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>4</mn></mrow><annotation>4</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">4</span></span></span></span> has a left neighbor.\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>3</mn></mrow><annotation>3</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">3</span></span></span></span> exists in the set.</li>\n<li>Do nothing.</li>\n</ul>\n</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>200</mn></mrow><annotation>200</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">200</span></span></span></span> does not have a left neightbor.\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>199</mn></mrow><annotation>199</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">199</span></span></span></span> does not exist in the set.</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>L</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi><mo>=</mo><mn>1</mn></mrow><annotation>Length = 1</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">g</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">h</span><span class=\"mspace\"></span><span class=\"mrel\">=</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">1</span></span></span></span></li>\n</ul>\n</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>1</mn></mrow><annotation>1</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">1</span></span></span></span> does not have a left neighbor.\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>0</mn></mrow><annotation>0</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">0</span></span></span></span> does not exist in the set.</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>L</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi><mo>=</mo><mn>1</mn></mrow><annotation>Length = 1</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">g</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">h</span><span class=\"mspace\"></span><span class=\"mrel\">=</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">1</span></span></span></span></li>\n<li>Does it have a right neighbor?\n<ul>\n<li>Yes.</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>4</mn></mrow><annotation>2, 3, 4</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">4</span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>L</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi><mo>=</mo><mn>4</mn></mrow><annotation>Length = 4</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">g</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">h</span><span class=\"mspace\"></span><span class=\"mrel\">=</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">4</span></span></span></span></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>You check the neighbors via a hash set.</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mo>=</mo><mo>[</mo><mn>100</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>200</mn><mo>,</mo><mn>1</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>2</mn><mo>]</mo></mrow><annotation>nums = [100, 4, 200, 1, 3, 2]</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">s</span><span class=\"mspace\"></span><span class=\"mrel\">=</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mopen\">[</span><span class=\"mord\">100</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">4</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">200</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">2</span><span class=\"mclose\">]</span></span></span></span>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>h</mi><mi>a</mi><mi>s</mi><mi>h</mi><mi>S</mi><mi>e</mi><mi>t</mi><mo>=</mo><mo>{</mo><mn>100</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>200</mn><mo>,</mo><mn>1</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>2</mn><mo>}</mo></mrow><annotation>hashSet = \\{100, 4, 200, 1, 3, 2\\}</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">ha</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">S</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\"></span><span class=\"mrel\">=</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mopen\">{</span><span class=\"mord\">100</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">4</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">200</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">2</span><span class=\"mclose\">}</span></span></span></span></li>\n</ul>\n</li>\n</ul>\n<p>A hash set differs from a hash map in various ways:</p>\n<ul>\n<li>Hash Sets contain unique values.\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mo>=</mo><mo>[</mo><mn>100</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>200</mn><mo>,</mo><mn>1</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>1</mn><mo>]</mo></mrow><annotation>nums = [100, 4, 200, 1, 3, 2, 1]</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">s</span><span class=\"mspace\"></span><span class=\"mrel\">=</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mopen\">[</span><span class=\"mord\">100</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">4</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">200</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>h</mi><mi>a</mi><mi>s</mi><mi>h</mi><mi>S</mi><mi>e</mi><mi>t</mi><mo>=</mo><mo>{</mo><mn>100</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>200</mn><mo>,</mo><mn>1</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>2</mn><mo>}</mo></mrow><annotation>hashSet = \\{100, 4, 200, 1, 3, 2\\}</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">ha</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">S</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\"></span><span class=\"mrel\">=</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mopen\">{</span><span class=\"mord\">100</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">4</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">200</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\"></span><span class=\"mord\">2</span><span class=\"mclose\">}</span></span></span></span></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Hash Maps have key-value pairs where values can be duplicates but keys are not.</li>\n</ul>\n<p>Using the hash set, you should se the length of all values in the set that does not have a left neighbor to <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>1</mn></mrow><annotation>1</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">1</span></span></span></span>. Afterwards, you should check if the right neighbor exists in the hash set and <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>i</mi><mi>n</mi><mi>c</mi><mi>r</mi><mi>e</mi><mi>m</mi><mi>e</mi><mi>n</mi><mi>t</mi></mrow><annotation>increment</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">in</span><span class=\"mord mathnormal\">cre</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span></span></span></span> the <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>l</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi></mrow><annotation>length</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">g</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">h</span></span></span></span>.</p>\n<h3>Helpful Hints</h3>\n<ul>\n<li>You should use a loop to iterate through the hash set.</li>\n<li>Check if it has a left neighbor.\n<ul>\n<li>If it does, do nothing.</li>\n<li>Else, set <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>l</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi><mo>=</mo><mn>1</mn></mrow><annotation>length = 1</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">g</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">h</span><span class=\"mspace\"></span><span class=\"mrel\">=</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mord\">1</span></span></span></span>.</li>\n</ul>\n</li>\n<li>Check if the first occurrence of a sequence has a right neighbor.\n<ul>\n<li>If it does, <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>i</mi><mi>n</mi><mi>c</mi><mi>r</mi><mi>e</mi><mi>m</mi><mi>e</mi><mi>n</mi><mi>t</mi></mrow><annotation>increment</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">in</span><span class=\"mord mathnormal\">cre</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span></span></span></span> the <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>l</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi></mrow><annotation>length</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">g</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">h</span></span></span></span>.</li>\n<li>Do this until the sequence ends.</li>\n</ul>\n</li>\n<li>Initialize a hash set.\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>h</mi><mi>a</mi><mi>s</mi><mi>h</mi><mi>S</mi><mi>e</mi><mi>t</mi><mo>=</mo><mi>s</mi><mi>e</mi><mi>t</mi><mo>(</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mo>)</mo></mrow><annotation>hashSet = set(nums)</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">ha</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">S</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\"></span><span class=\"mrel\">=</span><span class=\"mspace\"></span></span><span class=\"base\"><span class=\"strut\"></span><span class=\"mord mathnormal\">se</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n</li>\n</ul>\n<h3>Hash Set Solution</h3>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Solution</span>:\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">longestConsecutive</span>(<span class=\"hljs-params\">self, nums: <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]</span>) -> <span class=\"hljs-built_in\">int</span>:\n        <span class=\"hljs-comment\"># Initialize a hash set of nums</span>\n        hashSet = <span class=\"hljs-built_in\">set</span>(nums)\n        <span class=\"hljs-comment\"># Initialize the longest length</span>\n        longest = <span class=\"hljs-number\">0</span>\n\n        <span class=\"hljs-comment\"># Iterate through all numbers in nums</span>\n        <span class=\"hljs-keyword\">for</span> n <span class=\"hljs-keyword\">in</span> nums:\n            <span class=\"hljs-comment\"># Is the left neighbor in the hash set?</span>\n            <span class=\"hljs-keyword\">if</span> (n - <span class=\"hljs-number\">1</span>) <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">in</span> hashSet:\n                <span class=\"hljs-comment\"># If it is not, length = 1</span>\n                length = <span class=\"hljs-number\">1</span>\n                <span class=\"hljs-string\">\"\"\"\n                Does the first number in a sequence\n                have a right neighbor? Does it have\n                multiple right neighbors?\n                \"\"\"</span>\n                <span class=\"hljs-keyword\">while</span> (n + length) <span class=\"hljs-keyword\">in</span> hashSet:\n                    length += <span class=\"hljs-number\">1</span>\n                <span class=\"hljs-comment\"># Set the longest current length</span>\n                longest = <span class=\"hljs-built_in\">max</span>(longest, length)\n        \n        <span class=\"hljs-keyword\">return</span> longest\n</code></pre>",
  "title": "Longest Consecutive Sequence",
  "date": "March 5, 2025",
  "category": "Arrays",
  "categories": []
}