{
  "id": "php/namespaces",
  "contentHtml": "<h1>What are Namespaces?</h1>\n<p>Solves two different problems:</p>\n<ul>\n<li>Allow for better organization by grouping classes that work together.</li>\n<li>Allow the same name to be used for more than one class.</li>\n<li>Declared at the beginning of a file with the namespace keyword.</li>\n</ul>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;?php\n    namespace Html;\n    class Car {\n        // Properties\n        public $name;\n        public $price;\n        public $desc;\n\n        // Constructor\n        public function __construct($name, $price, $desc) {\n            $this->name = $name;\n            $this->price = $price;\n            $this->desc = $desc;\n        }\n\n        // Methods\n        public function message() {\n            return \"This {$this->name} costs {$this->price} with a description of {$this->desc}\";\n        }\n    }\n    \n    $lexus = new Car(\"Lexus\", 1000, \"awesome car!\");\n?></span>\n\n<span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-meta\">&#x3C;?php\n    echo $lexus->message();\n?></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<h2>Using Namespaces</h2>\n<p>Code that follows a namespace declartion:</p>\n<ul>\n<li>Operating inside the namespace.</li>\n<li>Classes belong to the namespace.\n<ul>\n<li>Instantiated without any qualifiers.</li>\n</ul>\n</li>\n<li>To access outside a namespace, class needs to have the namespace attached.</li>\n</ul>\n<p>Html.php:</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;?php\nnamespace Html;\n\nclass Car {\n    // Properties\n    public $name;\n    public $price;\n    public $desc;\n\n    // Constructor\n    public function __construct($name, $price, $desc) {\n        $this->name = $name;\n        $this->price = $price;\n        $this->desc = $desc;\n    }\n\n    // Methods\n    public function message() {\n        echo \"{$this->name} car costs {$this->price} with a description of: {$this->desc}\";\n    }\n}\n?></span>\n</code></pre>\n<p>index.php</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;?php\ninclude \"Html.php\";\n\n$lexus = new Html\\Car(\"Lexus\", 1000, \"awesome car!\");\n?></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-meta\">&#x3C;?php\n    $lexus->message();\n?></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<p>You can also declare namespace in both files.</p>\n<p>Html.php</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;?php\nnamespace Html;\n\nclass Car {\n    // Properties\n    public $name;\n    public $price;\n    public $desc;\n\n    // Constructor\n    public function __construct($name, $price, $desc) {\n        $this->name = $name;\n        $this->price = $price;\n        $this->desc = $desc;\n    }\n\n    // Methods\n    public function message() {\n        echo \"{$this->name} car costs {$this->price} with a description of: {$this->desc}\";\n    }\n}\n?></span>\n</code></pre>\n<p>index.php</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;?php\nnamespace Html;\ninclude \"Html.php\";\n\n$lexus = new Car(\"Lexus\", 1000, \"awesome car!\");\n?></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-meta\">&#x3C;?php\n    $lexus->message();\n?></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<h2>Namespace Alias</h2>\n<p>You can use an alias to make it easier to write.</p>\n<ul>\n<li>Namespace with an alias.</li>\n<li>Class with an alias.</li>\n</ul>\n<pre><code class=\"hljs language-php\"><span class=\"hljs-meta\">&#x3C;?php</span>\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">Html</span> <span class=\"hljs-keyword\">as</span> <span class=\"hljs-title\">H</span>;\n<span class=\"hljs-meta\">?></span>\n</code></pre>\n<pre><code class=\"hljs language-php\"><span class=\"hljs-meta\">&#x3C;?php</span>\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">Html</span>\\<span class=\"hljs-title\">Table</span> <span class=\"hljs-keyword\">as</span> <span class=\"hljs-title\">T</span>;\n<span class=\"hljs-meta\">?></span>\n</code></pre>",
  "title": "Namespaces",
  "date": "July 13, 2025",
  "category": "PHP 7",
  "categories": []
}