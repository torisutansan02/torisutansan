{
  "id": "php/operators",
  "contentHtml": "<h1>PHP Operators</h1>\n<p>Used to perform operations on variables and values.</p>\n<p>Divided into multiple groups:</p>\n<ul>\n<li>Arithmetic.</li>\n<li>Assignment.</li>\n<li>Comparison.</li>\n<li>Increment/Decrement.</li>\n<li>Logical.</li>\n<li>String.</li>\n<li>Array.</li>\n<li>Conditional Assignments.</li>\n</ul>\n<h2>Arithmetic</h2>\n<p>Used with numerical operatiosn to perform common arithmetical operations.</p>\n<pre><code>+\r\nAddition.\r\n$x + $y\r\nSum of $x and $y\r\n\r\n-\r\nSubtraction.\r\n$x - $y\r\nDifference of $x and $y\r\n\r\n*\r\nMultiplication.\r\n$x * $y\r\nProduct of $x and $y\r\n\r\n/\r\nDivision.\r\n$x / $y\r\nQuotient of $x and $y\r\n\r\n%\r\nModulo.\r\n$x % $y\r\nRemainder of $x divided by $y\r\n\r\n**\r\nExponentiation.\r\n$x ** $y\r\nResult of raising $x to the $y'th power.\n</code></pre>\n<h2>Assignments</h2>\n<p>Used with numeric values to write a value to a variable.</p>\n<ul>\n<li>Basic operator is '='. The left operand is assigned to the value of the expression on the right.</li>\n</ul>\n<pre><code>x = y\r\nSame as x = y\r\nLeft operand assigned value of the expression on the right\r\n\r\nx += y\r\nx = x + y\r\nAddition\r\n\r\nx -= y\r\nx = x - y\r\nSubtraction\r\n\r\nx *= y\r\nx = x * y\r\nMultiplication\r\n\r\nx /= y\r\nx = x / y\r\nDivision\r\n\r\nx %= y\r\nx = x % y\r\nModulus\n</code></pre>\n<h2>Comparison</h2>\n<p>Used to compare two values (number or string).</p>\n<pre><code>==\r\nEqual\r\n$x == $y\r\nReturn true if $x is equal to $y\r\n\r\n===\r\nIdentical\r\n$x === $y\r\nReturns true if $x is equal to $y, and they are the same type\r\n\r\n!=\r\nNot equal\r\n$x != $y\r\nReturns true is $x is not equal to $y\r\n\r\n&#x3C;>\r\nNot equal\r\n$x &#x3C;> $y\r\nReturns true if $x is not equal to $y\r\n\r\n!==\r\nNot identical\r\n$x !== $y\r\nReturns true if $x is not equal to $y, or they are not the same type\r\n\r\n>\r\nGreater than\r\n$x > $y\r\nReturns true if $x is greater than $y\r\n\r\n&#x3C;\r\nLess than\r\n$x &#x3C; $y\r\nReturns true if $x is less than $y\r\n\r\n>=\r\nGreater than or equal to\r\n$x >= $y\r\nReturns true if $x is greater than or equal to $y\r\n\r\n&#x3C;=\r\nLess than or equal to\r\n$x &#x3C;= $y\r\nReturns true if $x is less than or equal to $y\r\n\r\n&#x3C;=>\r\nSpaceship\r\n$x &#x3C;=> $y\r\nReturns an integer less than, equal to, or greater than zero, depending on if $x is less than, equal to, or greater than $y.\n</code></pre>\n<h2>Increment / Decrement</h2>\n<p>Used to increment or decrement a variable's value.</p>\n<pre><code>++$x\r\nPre-increment\r\nIncrements $x by one, then returns $x\r\n\r\n$x++\r\nPost-increment\r\nReturns $x, then increments $x by one\r\n\r\n--$x\r\nPre-decrement\r\nDecrements $x by one, then returns $x\r\n\r\n$x--\r\nPost-decrement\r\nReturns $x, then decrements $x by one\n</code></pre>\n<h2>Logical Operators</h2>\n<p>Used to combine conditional statements</p>\n<pre><code>and\r\nAnd\r\n$x and $y\r\nTrue if both $x and $y are true\r\n\r\nor\r\nOr\r\n$x or $y\r\nTrue if either $x or $y are true\r\n\r\nxor\r\nXor\r\n$x xor $y\r\nTrue if either $x or $y is true, not both\r\n\r\n&#x26;&#x26;\r\nAnd\r\n$x &#x26;&#x26; $y\r\nTrue if both $x and $y are true\r\n\r\n||\r\nOr\r\n$x || $y\r\nTrue if either $x or $y are true\r\n\r\n!\r\nNot\r\n!$x\r\nTrue if $x is not true\n</code></pre>\n<h2>String Operators</h2>\n<p>These operators are designed for concatenation of strings</p>\n<pre><code>.\r\nConcatenation\r\n$msg1 . $msg2\r\nConcatenation of $msg1 and $msg2\r\n\r\n.=\r\nConcatenation Assignment\r\n$msg1 . $msg2\r\nAppens $msg1 to $msg2\n</code></pre>\n<h2>Array Operators</h2>\n<p>Used to compare arrays.</p>\n<pre><code>+\r\nUnion\r\n$x + $y\r\nUnion of $x and $y\r\n\r\n==\r\nEquality\r\n$x == $y\r\nReturns true if $x and $y have the same key/value pairs\r\n\r\n===\r\nIdentity\r\n$x == $y\r\nReturns true if $x and $y have the same key/value pairs in the same order and of the same types\r\n\r\n!=\r\nInequality\r\n$x != $y\r\nReturns true if $x is not equal to $y\r\n\r\n&#x3C;>\r\nInequality\r\n$x &#x3C;> $y\r\nReturns true if $x is not equal to $y\r\n\r\n!==\r\nNon-identity\r\nReturns true if $x is not identicaly $y\n</code></pre>\n<h2>Conditional Assignment Operators</h2>\n<p>Used to set a value depending on conditions.</p>\n<pre><code>?:\r\nTernary\r\n$x = expr1 ? expr2 : expr3\r\nReturns the value of $x\r\n$x becomes expr2 if expr1 is true\r\n$x becomes expr3 if expr1 is false\r\n\r\n??\r\nNull Coalescing\r\n$x = expr1 ?? expr2\r\nReturns the value of $x\r\n$x is expr1 if expr1 exists, and not null.\r\n$x becomes expr2 otherwise\n</code></pre>",
  "title": "PHP Operators",
  "date": "July 12, 2025",
  "category": "PHP 7",
  "categories": []
}