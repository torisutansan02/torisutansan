{
  "id": "php/numbers",
  "contentHtml": "<h1>PHP Numbers</h1>\n<p>Like integers, floats, and number strings.</p>\n<h2>Types</h2>\n<ul>\n<li>Integer.</li>\n<li>Float</li>\n<li>Number Strings.</li>\n</ul>\n<p>PHP has additional data types for numbers:</p>\n<ul>\n<li>Infinity.</li>\n<li>NaN.</li>\n</ul>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\r\n    <span class=\"hljs-meta\">&#x3C;?php\r\n        $a = 5;\r\n        $b = 3.14;\r\n        $c = \"25\";\r\n\r\n        var_dump($a);\r\n        echo \"&#x3C;br>\";\r\n        var_dump($b);\r\n        echo \"&#x3C;br>\";\r\n        var_dump($c);\r\n        echo \"&#x3C;br>\";\r\n    ?></span>\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<h2>PHP Integers</h2>\n<p>Any positive or negative number without a decimal.</p>\n<ul>\n<li>32 bit systems.</li>\n<li>64 bit systems.</li>\n</ul>\n<p>If it exceeds the value in the bit systems, it stores as a float.</p>\n<p>If an operand is a float in an expression, the stored result is a float.</p>\n<p>Rules for integers:</p>\n<ul>\n<li>At least one digit.</li>\n<li>No decimal point.</li>\n<li>Positive or negative.</li>\n<li>Decimal (base 10), hexadecimal (base 16), octal (base 8), binary (base 2).</li>\n</ul>\n<p>Predefined constants:</p>\n<ul>\n<li>PHP_INT_MAX\n<ul>\n<li>Largest integer supported.</li>\n</ul>\n</li>\n<li>PHP_INT_MIN\n<ul>\n<li>Smallest integer supported.</li>\n</ul>\n</li>\n<li>PHP_INT_SIZE\n<ul>\n<li>Size of an integer in bytes.</li>\n</ul>\n</li>\n</ul>\n<p>Functions to check if a variable is an integer:</p>\n<ul>\n<li>is_int();</li>\n<li>is_integer();</li>\n<li>is_long;</li>\n</ul>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\r\n    <span class=\"hljs-meta\">&#x3C;?php\r\n        $x = 73;\r\n        var_dump(is_int($x));\r\n\r\n        $x = 73.5;\r\n        var_dump(is_int($x));\r\n    ?></span>\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<h2>PHP Floats</h2>\n<p>A decimal point or a number in exponential form.</p>\n<ul>\n<li>Maximum precision of 14 digits.</li>\n<li>Max value of 1.7976931348623E+308.</li>\n</ul>\n<p>Predefined constants:</p>\n<ul>\n<li>PHP_FLOAT_MAX\n<ul>\n<li>Largest representable floating point number.</li>\n</ul>\n</li>\n<li>PHP_FLOAT_MIN\n<ul>\n<li>Smallest representable floating point number.</li>\n</ul>\n</li>\n<li>PHP_FLOAT_DIG\n<ul>\n<li>Number of decimal digits that can be rounded into a float and back without precision loss.</li>\n</ul>\n</li>\n<li>PHP_FLOAT_EPSILON\n<ul>\n<li>Smallest representable positive number x, so that x + 1.0 != 1.0.</li>\n</ul>\n</li>\n</ul>\n<p>Functions to check if a variable is a float:</p>\n<ul>\n<li>is_float();</li>\n<li>is_double();</li>\n</ul>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\r\n    <span class=\"hljs-meta\">&#x3C;?php\r\n        $x = 7.32;\r\n        var_dump(is_float($x));\r\n    ?></span>\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<h2>PHP Infinity</h2>\n<p>A number larger than PHP_FLOAT_MAX is infinite.</p>\n<p>How to check for an infinite number:</p>\n<ul>\n<li>is_finite();</li>\n<li>is_infinite();</li>\n</ul>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\r\n    <span class=\"hljs-meta\">&#x3C;?php\r\n        $x = 1.9e411;\r\n        var_dump($x);\r\n    ?></span>\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<h2>PHP NaN</h2>\n<p>NaN stands for Not a Number.</p>\n<ul>\n<li>Used for impossible mathematical operations.</li>\n</ul>\n<p>How to check if a number is NaN:</p>\n<ul>\n<li>is_nan();</li>\n</ul>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\r\n    <span class=\"hljs-meta\">&#x3C;?php\r\n        $x = acos(8);\r\n        var_dump($x);\r\n    ?></span>\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<h2>PHP Numerical Strings</h2>\n<p>You can use the is_numeric() function to find out if a variable is numeric.</p>\n<ul>\n<li>Hexadecimal values are not numeric strings.</li>\n</ul>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\r\n    <span class=\"hljs-meta\">&#x3C;?php\r\n        $x = 5000;\r\n        var_dump(is_numeric($x));\r\n\r\n        $x = \"5000\";\r\n        var_dump(is_numeric($x));\r\n\r\n        $x = \"60.1\" + 100;\r\n        var_dump(is_numeric($x));\r\n\r\n        $x = \"Hello\";\r\n        var_dump(is_numeric($x));\r\n    ?></span>\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<h2>PHP Casting Strings and Floats to Integers</h2>\n<p>You can use functions to cast variables to different data types:</p>\n<ul>\n<li>(int)</li>\n<li>(integer)</li>\n<li>intval()</li>\n</ul>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\r\n    <span class=\"hljs-meta\">&#x3C;?php\r\n        // Float to Int\r\n        $x = 63.21;\r\n        $int_cast = (int)$x;\r\n        echo $int_cast;\r\n\r\n        echo \"&#x3C;br>\";\r\n\r\n        // String to Int\r\n        $x = \"23.21\";\r\n        $int_cast = (int)$x;\r\n        echo $int_cast;\r\n\r\n        echo \"&#x3C;br>\";\r\n    ?></span>\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>",
  "title": "PHP Numbers",
  "date": "July 12, 2025",
  "category": "PHP 7",
  "categories": []
}