{
  "id": "php/datatypes",
  "contentHtml": "<h1>PHP Data Types</h1>\n<p>Has several data types:</p>\n<ul>\n<li>String.</li>\n<li>Integer.</li>\n<li>Float (Or Double).</li>\n<li>Boolean.</li>\n<li>Array.</li>\n<li>Object.</li>\n<li>NULL.</li>\n<li>Resource.</li>\n</ul>\n<h2>Getting a Data Type</h2>\n<p>You can get the data type and value using var_dump().</p>\n<pre><code class=\"language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-meta\">&#x3C;?php\n        $x = 3;\n        var_dump($x);\n    ?></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<h2>PHP String</h2>\n<p>A sequence of characters denoted in quotes.</p>\n<ul>\n<li>\"Hello world.\"</li>\n</ul>\n<pre><code class=\"language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-meta\">&#x3C;?php\n        $name = \"Tristan\";\n        $desc = \"Software Engineer\";\n\n        var_dump($name);\n        echo \"&#x3C;br>\";\n        var_dump($desc);\n    ?></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<h2>PHP Integer</h2>\n<p>Non-decimal number between <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>−</mo><mn>2</mn><mo>(</mo><mn>31</mn><mo>)</mo></mrow><annotation>-2^(31)</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.138em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mopen mtight\">(</span></span></span></span></span></span></span></span><span class=\"mord\">31</span><span class=\"mclose\">)</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>2</mn><mo>(</mo><mn>31</mn><mo>)</mo><mo>−</mo><mn>1</mn></mrow><annotation>2^(31) - 1</annotation></semantics></math></span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.138em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mopen mtight\">(</span></span></span></span></span></span></span></span><span class=\"mord\">31</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>.</p>\n<ul>\n<li>Integer must have at least one digit.</li>\n<li>Not have a decimal point.</li>\n<li>Must be positive or negative.</li>\n<li>Specified in:\n<ul>\n<li>Decimal (base 10).</li>\n<li>Hexadecimal (base 16).</li>\n<li>Octal (base 8).</li>\n<li>Binary (base 2).</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-meta\">&#x3C;?php\n        $x = 5000;\n        var_dump($x);\n    ?></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<h2>PHP Float</h2>\n<p>Floating point numbers are numbers with a decimal point or in exponential form.</p>\n<pre><code class=\"language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-meta\">&#x3C;?php\n        $x = 10.23;\n        var_dump($x);\n    ?></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<h2>PHP Boolean</h2>\n<p>Represents a True or False state.</p>\n<ul>\n<li>Used in conditional testing.</li>\n</ul>\n<pre><code class=\"language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-meta\">&#x3C;?php\n        $x = true;\n        var_dump($x);\n    ?></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<h2>PHP Array</h2>\n<p>Stores multiple values in one single variable.</p>\n<pre><code class=\"language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-meta\">&#x3C;?php\n        $food = array(\"Pizza\", \"Sandwiches\", \"Spaghetti\");\n        var_dump($food);\n    ?></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<h2>PHP Object</h2>\n<p>Objects are an instance of a class.</p>\n<ul>\n<li>A class is a template for objects.</li>\n</ul>\n<p>Objects inherit properties and behaviors from a class.</p>\n<ul>\n<li>But different objects have different values for properties.</li>\n</ul>\n<pre><code class=\"language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-meta\">&#x3C;?php\n        class Food {\n            public $item;\n            public $cost;\n            public $desc;\n\n            public function __construct($item, $cost, $desc) {\n                $this->item = $item;\n                $this->cost = $cost;\n                $this->desc = $desc;\n            }\n\n            public function foodDesc() {\n                return $this->item . \": \" . $this->cost . \", \" . $this->desc;\n            }\n        }\n\n        $myFood = new Food(\"Pizza\", 12, \"A tasty treat!\");\n        var_dump($myFood);\n        print(\"&#x3C;br>\");\n        print($myFood->foodDesc());\n    ?></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<h2>PHP NULL Value</h2>\n<p>Has one value:</p>\n<ul>\n<li>NULL.</li>\n</ul>\n<p>This means it has no value assigned to it.</p>\n<ul>\n<li>A variable created without a value is automatically assigned to NULL.</li>\n<li>Variables emptied by setting it to NULL.</li>\n</ul>\n<pre><code class=\"language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-meta\">&#x3C;?php\n        $x = \"Hi Tristan!\";\n        $x = null;\n\n        var_dump($x);\n    ?></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<h2>Changing Data Types</h2>\n<p>You can change data types of a variable by reassigning its value.</p>\n<pre><code class=\"language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-meta\">&#x3C;?php\n        $x = 2;\n        var_dump($x);\n\n        $x = \"Tristan\";\n        var_dump($x);\n    ?></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<p>You can use casting to change the data type of a variable without changing its value.</p>\n<pre><code class=\"language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-meta\">&#x3C;?php\n        $x = 7.7;\n        $x = (string)$x;\n\n        var_dump($x);\n    ?></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<h2>PHP Resource</h2>\n<p>Not an actual data type.</p>\n<ul>\n<li>Stores a reference to functions and resources external to PHP.</li>\n<li>Like a database call.</li>\n</ul>",
  "title": "PHP Data Types",
  "date": "July 12, 2025",
  "category": "PHP 7",
  "categories": []
}