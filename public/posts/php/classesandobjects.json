{
  "id": "php/classesandobjects",
  "contentHtml": "<h1>Classes and Objects</h1>\n<p>A class is a template for objects.</p>\n<ul>\n<li>Objects are instances of classes.</li>\n</ul>\n<h2>OOP</h2>\n<p>We have a class.</p>\n<ul>\n<li>Classes have different properties.\n<ul>\n<li>These properties are variables.</li>\n</ul>\n</li>\n<li>Objects are creaates.\n<ul>\n<li>They inherit properties and behaviors from classes.</li>\n<li>But each object has different values for properties.</li>\n</ul>\n</li>\n</ul>\n<h2>Define a Class</h2>\n<p>Classes are defined with the class keyword followed by its name.</p>\n<ul>\n<li>Then wrap it with curly braces.</li>\n<li>This is where the properties and methods go.</li>\n<li>Properties and functions are called methods.</li>\n</ul>\n<h2>Define Objects</h2>\n<p>Classes need objects.</p>\n<ul>\n<li>Objects have all properties and methods defined in the class.\n<ul>\n<li>With different property values.</li>\n<li>Use the new keyword to create objects.</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-meta\">&#x3C;?php\n    class Food {\n        // Properties\n        public $name;\n        public $price;\n        public $desc;\n\n        // Methods\n        function set_name($name) {\n            $this->name = $name;\n        }\n\n        function get_name() {\n            return $this->name;\n        }\n\n        function set_price($price) {\n            $this->price = $price;\n        }\n\n        function get_price() {\n            return $this->price;\n        }\n\n        function set_desc($desc) {\n            $this->desc = $desc;\n        }\n\n        function get_desc() {\n            return $this->desc;\n        }\n    }\n\n    $pancake = new Food();\n    $hamburger = new Food();\n    \n    $pancake->set_name(\"Pancake\");\n    $pancake->set_price(12);\n    $pancake->set_desc(\"Tasty treat!\");\n\n    $hamburger->set_name(\"Hamburger\");\n    $hamburger->set_price(15);\n    $hamburger->set_desc(\"Yum!\");\n\n    echo $pancake->get_name();\n    echo \"&#x3C;br>\";\n    echo $pancake->get_price();\n    echo \"&#x3C;br>\";\n    echo $pancake->get_desc();\n    echo \"&#x3C;br>\";\n\n    echo \"&#x3C;br>\";\n    echo $hamburger->get_name();\n    echo \"&#x3C;br>\";\n    echo $hamburger->get_price();\n    echo \"&#x3C;br>\";\n    echo $hamburger->get_desc();\n    echo \"&#x3C;br>\";\n?></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<h2>The $this Keyword</h2>\n<p>Refers to the current object.</p>\n<ul>\n<li>Only available inside methods.</li>\n</ul>\n<p>You can change properties inside classes</p>\n<ul>\n<li>And outside.</li>\n</ul>\n<pre><code class=\"language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-meta\">&#x3C;?php\n    class Food {\n        // Properties\n        public $name;\n\n        // Methods\n        function set_name($name) {\n            $this->name = $name;\n        }\n    }\n\n    $apple = new Food();\n    $apple->set_name(\"Apple\");\n\n    echo $apple->name;\n    \n    $apple->name = \"Banana\";\n\n    echo $apple->name;\n?></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n\n## instanceof\n\nYou can use the instanceof keyword to determine if an object belongs to a class.\n\n```html\n<span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-meta\">&#x3C;?php\n    class Food {\n        // Properties\n        public $name;\n\n        // Methods\n        function set_name($name) {\n            $this->name = $name;\n        }\n    }\n\n    $apple = new Food();\n    $apple->set_name(\"Apple\");\n\n    var_dump($apple instanceof Food);\n?></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>",
  "title": "Classes and Objects",
  "date": "July 12, 2025",
  "category": "PHP 7",
  "categories": []
}