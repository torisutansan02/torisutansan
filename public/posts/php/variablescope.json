{
  "id": "php/variablescope",
  "contentHtml": "<h1>PHP Variables Scope</h1>\n<p>PHP variables can be declared anywhere in a script.</p>\n<ul>\n<li>Global.</li>\n<li>Local.</li>\n<li>Static.</li>\n</ul>\n<h2>Global and Local Scope</h2>\n<p>Variables in the outermost layer of a file outside of functions are global.</p>\n<ul>\n<li>Can only be accessed on the outermost layer.</li>\n</ul>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\r\n    <span class=\"hljs-meta\">&#x3C;?php\r\n        $x = 5;\r\n\r\n        function localFunction() {\r\n            // Will not print x\r\n            echo \"&#x3C;p> Variable x: $x &#x3C;/p>\";\r\n        }\r\n        localFunction();\r\n\r\n        // Will print x\r\n        echo \"&#x3C;p> Variable x: $x\";\r\n    ?></span>\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<p>Variables within a function are in the local scope.</p>\n<ul>\n<li>Will not be accessible outside of the function.</li>\n</ul>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\r\n    <span class=\"hljs-meta\">&#x3C;?php\r\n        function localFunction() {\r\n            $x = 5;\r\n            // Will print x\r\n            echo \"&#x3C;p> Variable x: $x &#x3C;/p>\";\r\n        }\r\n        localFunction();\r\n        \r\n        // Will not print x\r\n        echo \"&#x3C;p> Variable x: $x &#x3C;/p>\";\r\n    ?></span>\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<p>You can have local variables with the same name in different functions.</p>\n<ul>\n<li>They are only recognized in the functions they are declared in.</li>\n</ul>\n<h2>PHP Global Keyword</h2>\n<p>The global keyword is used to access a global variable within the local scope.</p>\n<ul>\n<li>Use before variables.</li>\n</ul>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\r\n    <span class=\"hljs-meta\">&#x3C;?php\r\n        $x = 3;\r\n\r\n        function localFunction() {\r\n            global $x;\r\n            $x = $x + $x;\r\n        }\r\n        localFunction();\r\n\r\n        echo $x;\r\n    ?></span>\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<p>Global variables are stored in an array called $GLOBALS[index].</p>\n<ul>\n<li>Holds the name of the variable.</li>\n<li>Accessible from within functions.\n<ul>\n<li>To update global variables directly.</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\r\n    <span class=\"hljs-meta\">&#x3C;?php\r\n        $x = 3;\r\n        $y = 5;\r\n\r\n        function localFunction() {\r\n            $GLOBALS['x'] = $GLOBALS['y'] + $GLOBALS['x'];\r\n        }\r\n        localFunction();\r\n\r\n        echo $x\r\n    ?></span>\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<h2>PHP Static Keyword</h2>\n<p>The static keyword allows us to keep local variables.</p>\n<ul>\n<li>By default , they are deleted.</li>\n</ul>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\r\n    <span class=\"hljs-meta\">&#x3C;?php\r\n        function localFunction() {\r\n            static $x = 5;\r\n            echo $x;\r\n            $x++;\r\n        }\r\n        localFunction();\r\n        echo \"&#x3C;br>\";\r\n        localFunction();\r\n        echo \"&#x3C;br>\";\r\n        localFunction();\r\n        echo \"&#x3C;br>\";\r\n    ?></span>\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\r\n\r\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<p>The variable will contain the information it contained from the last function call.</p>\n<ul>\n<li>The variable is still local to the function.</li>\n</ul>",
  "title": "PHP Variables Scope",
  "date": "July 12, 2025",
  "category": "PHP 7",
  "categories": []
}